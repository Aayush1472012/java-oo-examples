olib=~/code/p2gstuff/olib filter="*.c *.sh *.cc *.cpp *.h *.hpp *.cu *.cl *.py *.cmake Makefile *.bib *.rst *.tex *.txt" {
 CMakeLists.txt
 run_mjpeg_encoderExample.sh
 run_mjpeg_x86_example.sh
 cmake-include=cmake-include {
  FindOpenCL.cmake
  cl_to_header.py
  opencl.cmake
 }
 examples=examples{
  CMakeLists.txt
  Server.cc
  Slave.cc
  communication.cc
  mjpeg-encoder.cc
  mjpeg-x86.cc
  simple.cc
  simple.olib=simple.olib {
   CMakeLists.txt
   x86.cc
  }
  communication.olib=communication.olib {
   CMakeLists.txt
   x86.cc
  }
  mjpeg-x86.olib=mjpeg-x86.olib {
   CMakeLists.txt
   Makefile
   cosuv.h
   dct.c
   dobench.sh
   mjpeg_encoder.c
   mjpeg_encoder.h
   mjpeg_encoder_main.cc
   mjpeg_encoder_main.h
   mjpeg_encoder_main_lib.cc
   x86.cc
  }
  mjpeg=mjpeg {
   CMakeLists.txt
   Makefile
   cosv.h
   cpu_writer.cc
   cpu_writer.h
   dct_quantize.cu
   dct_quantize.h
   dct_t.cc
   dct_t.h
   headers.h
   huffman_kernel.cu
   no-olib.cc
   read_yuv_image.cc
   read_yuv_image.h
   runtractor.sh
   sizes_t.cc
   sizes_t.h
   yuv_t.cc
   yuv_t.h
   mjpeg.olib=mjpeg.olib {
    CMakeLists.txt
    cuda.cc
   }
  }
 }
 olib=olib filter="*.h" {
  OlibBase.h
  OlibClient.h
  OlibMaster.h
  OlibSlave.h
  error_callbacks.h
  obeselib.h
  olib.h
  protocol.h
  protocol=protocol {
   Context.h
   ContextForwardDecl.h
   ContextMap.h
   EventIds.h
   MasterConnection.h
   OnRunResponseMap.h
   RunRequest.h
   RunResponse.h
   ScheduleRequest.h
   ScheduleResponse.h
   SlaveEventHeader.h
   SlaveSession.h
   UnScheduleRequest.h
   contextid.h
   handlers.h
   slaveEventId.h
  }
  obeselib=obeselib {
   SharedLib.h
   load.h
  }
  utils=utils {
   ThreadsafeIdGen.h
   ThreadsafeMap.h
   ThreadsafeMultiMap.h
   ThreadsafeQueue.h
  }
 }
 tests=tests{
  CMakeLists.txt
 }
}
sevent=~/code/p2gstuff/sevent filter="*.cc *.h CMakeLists.txt" {
 CMakeLists.txt
 examples=examples {
  CMakeLists.txt
  Client.cc
  EventExample.cc
  Server.cc
  SocketExample.cc
  showcase=showcase {
   BoostSerializedAddressBook.h
   CMakeLists.txt
   Client.cc
   Server.cc
   Shared.h
   ToggleDebugClient.cc
  }
 }
 sevent=sevent filter="*.h CMakeLists.txt" {
  BoostSerialize.h
  CMakeLists.txt
  EndianSafe.h
  EventHandlerMap.h
  sevent.h
  socket.h
  socket=socket {
   Address.h
   AsioConnector.h
   AsioFacade.h
   AsioListener.h
   AsioService.h
   AsioSession.h
   Connector.h
   ConstBuffer.h
   Facade.h
   Listener.h
   MutableBuffer.h
   ReceiveEvent.h
   Service.h
   Session.h
   SessionRegistry.h
   SessionRegistryForwardDecl.h
   size.h
  }
 }
 test=test {
  CMakeLists.txt
  TestBoostSerialize.cc
  socket=socket {
   CMakeLists.txt
   StressTestFacade.cc
   TestFacade.cc
   TestFacadeMultiClient.cc
   helpers.h
  }
 }
}
old_olib=~/code/p2gstuff/old_olib filter="*.c *.sh *.cc *.cpp *.h *.hpp *.cu *.cl *.py *.cmake Makefile *.bib *.rst *.tex *.txt" {
 CMakeLists.txt
 TODO.txt
 run_fakedct2_example.sh
 run_fakedct_example.sh
 run_mjpeg_x86_example.sh
 run_stresstestEvents.sh
 demos=demos {
  CMakeLists.txt
  clientcli.h
  fakedct-example.cc
  fakedct2-example.cc
  mjpeg-x86-example.cc
  demo=demo {
   CMakeLists.txt
   cl.hpp
   cudatst.cu
   opencltst.cpp
   x86.c
  }
  mjpeg=mjpeg{
   CMakeLists.txt
   mjpeg_encoder.cpp
   mjpeg_encoder.h
   thelib=thelib{
    CMakeLists.txt
    cl.hpp
    cl_to_header.py
    mjpeg-opencl-kernel.cl
    mjpeg-opencl.cpp
    mjpeg-x86.c
    opencl.cmake
   }
  }
 }
 examples=examples{
  CMakeLists.txt
  master.cc
  slave.cc
 }
 olib=olib filter="*.h" {
  DataConnection.h
  EventLoop.h
  FakeScheduler.h
  LibnameQry.h
  LocalScheduler.h
  LocalSchedulerCallbacks.h
  MasterScheduler.h
  MasterSchedulerRoundRobin.h
  OlibFunctionPath.h
  RunFunctionRequest.h
  RunFunctionService.h
  RunningFunction.h
  RunningFunctionInput.h
  RunningFunctionRegistry.h
  ServiceIdentifiers.h
  SharedLib.h
  SlaveInfo.h
  ThreadSafeMap.h
  WhereToRunMasterService.h
  WhereToRunRequest.h
  WhereToRunResponse.h
  WhereToRunSlaveService.h
  client.h
 }
 tests=tests{
  CMakeLists.txt
  TestDataConnection.cc
  TestLocalScheduler.cc
  TestLocalSchedulerAdv.cc
  TestSendDataBuffer.cc
  TestSharedLib.cc
  TestThreadSafeMap.cc
  TestLocalScheduler_olib=TestLocalScheduler_olib {
   CMakeLists.txt
   x86.cc
  }
 }
}
p2g=~/code/p2g {
 CMakeLists.txt
 Doxyfile.in
 README
 cmake_modules=cmake_modules {
  BoostTestTargets.cmake
  BoostTestTargetsDynamic.h
  BoostTestTargetsIncluded.h
  BoostTestTargetsStatic.h
  CopyResourcesToBuildTree.cmake
  FindLOKI.cmake
  GetForceIncludeDefinitions.cmake
 }
 examples=examples {
  2d-array.klg
  age-final.klg
  age.klg
  array2Daverage.klg
  array3Daverage.klg
  bubblesort.klg
  deadline.klg
  fib.klg
  k-means-with-deadlines.klg
  k-means.klg
  k-means2.klg
  maxtrix-mul-1d.klg
  mul-sum.klg
  trivial.klg
 }
 scripts=scripts {
  rtbuild
  run.sh
 }
 src=src {
  CMakeLists.txt
  p2gc=p2gc {
   CMakeLists.txt
   Config.cc
   Config.h
   main.cc
   backend=backend {
    BackendError.cc
    BackendError.h
    BackendSimple.cc
    BackendSimple.h
    ExpressionVisitors.cc
    ExpressionVisitors.h
    Fields.cc
    Fields.h
    Generator.cc
    Kerneldata.cc
   }
   frontend=frontend {
    AbsGlobal.cc
    AbsGlobal.h
    AbsIdentifier.cc
    AbsIdentifier.h
    AbsIdentifierMap.cc
    AbsIdentifierMap.h
    AbsKernel.cc
    AbsKernel.h
    AbsStoreIdentifierMap.cc
    AbsStoreIdentifierMap.h
    KernSourceCompiler.cc
    KernSourceCompiler.h
    KernSourceDef.cc
    KernSourceDef.h
    KernSourceExpr.cc
    KernSourceExpr.h
    KernSourceScanner.cc
    KernSourceScanner.h
    KernSourceStmt.cc
    KernSourceStmt.h
    KernSourceTypes.cc
    KernSourceTypes.h
    bisonin.ypp
    flexin.ll
    intsethelpers.cc
    intsethelpers.h
    mkstring.cc
    mkstring.h
    stringhelpers.cc
    stringhelpers.h
   }
  }
  p2grt=p2grt {
   Age.h
   CMakeLists.txt
   EventHandler.cc
   EventHandler.h
   Field.h
   FieldRecord.cc
   FieldRecord.h
   GlobalTypes.h
   KernelDefRegister.cc
   KernelDefRegister.h
   MetaKernel.cc
   MetaKernel.h
   MultiArrayField.h
   ObeseLibraryDir.h
   ObeseLibraryInterface.h
   Scheduler.cc
   Scheduler.h
   SharedLib.h
   State.h
   Timer.cc
   Timer.h
   WorkerPool.cc
   WorkerPool.h
  }
  events=events{
   ByteArray.h
   CMakeLists.txt
   CommunicationHandler.cc
   CommunicationHandler.h
   Config.cc
   Config.h
   ConnectionRegister.cc
   ConnectionRegister.h
   Connector.cc
   Connector.h
   EventException.h
   GlobalTypes.h
   Handler.h
   IOService.cc
   IOService.h
   LoaderService.cc
   LoaderService.h
   Message.h
   MsgQueue.h
   NameService.cc
   NameService.h
   RPCService.cc
   RPCService.h
   Sender.cc
   Sender.h
   SenderPool.cc
   SenderPool.h
   ServerHandler.cc
   ServerHandler.h
   Service.h
   SocketInfo.cc
   SocketInfo.h
   SubscriptionService.cc
   SubscriptionService.h
   TransferService.cc
   TransferService.h
   Utilities.h
   XDRBuffer.cc
   XDRBuffer.h
   XDRReader.h
   XDRWriter.h
   events.h
  }
 }
 test=test {
  CMakeLists.txt
  backend=backend {
   CMakeLists.txt
  }
  frontend=frontend {
   CMakeLists.txt
   Diag-Test-1.klg
   Dim-Test-1.klg
   Dim-Test-2.klg
   Dim-Test-3.klg
   Double-Store-1.klg
   Double-Store-2.klg
   Double-Store-3.klg
   Easy-Test-1.klg
   Easy-Test-2.klg
   Easy-Test-3.klg
   Example-1.klg
   Expr-Set-1.klg
   Fetch-Blocks-1.klg
   Fetch-Blocks-2.klg
   Fetch-Intra-1.klg
   Fetch-Intra-2.klg
   Fetch-Range-1.klg
   Map-Undef-1.klg
   Map-Undef-2.klg
   Map-Unused-1.klg
   Map-Unused-2.klg
   Map-Unused-Test-1.klg
   Transpose-Test-1.klg
   Transpose-Test-2.klg
   Transpose-Test-3.klg
   Type-Confl-1.klg
  }
  runtime=runtime {
   CMakeLists.txt
   Test.cpp
   TestObeseLibraryDir.cpp
   TestSharedLib.cpp
  }
 }
 trash=trash {
  array2Daverage.cc
  rtpar.cc
  test-kernel.klg
 }
}
master=~/code/master filter="*.c *.cpp *.h *.hpp *.cu *.cl *.py *.cmake Makefile *.bib *.rst *.tex *.txt" {
 Makefile
 intro.txt
 cuda=cuda {
  tests=tests {
   Makefile
   benchmark.cu
   loop.h
   loop_cpu.c
   loop_gpu.cu
   timer.h
  }
 }
 opencl=opencl {
  Makefile
  minimal.c
  openclexample.c
  cpp=cpp {
   CMakeLists.txt
   cl.hpp
   cl_to_header.py
   tst.cpp
   tst_fileinclude.cl
   tst_fileinclude.cpp
  }
 }
 gtest-1.5.0=gtest-1.5.0 {
  CMakeLists.txt
  build-aux=build-aux {
  }
  cmake-build=cmake-build {
   CMakeCache.txt
   CTestTestfile.cmake
   Makefile
   cmake_install.cmake
   CMakeFiles=CMakeFiles {
    CMakeCCompiler.cmake
    CMakeCXXCompiler.cmake
    CMakeDirectoryInformation.cmake
    CMakeSystem.cmake
    Makefile.cmake
    TargetDirectories.txt
    CMakeTmp=CMakeTmp {
     CMakeFiles=CMakeFiles {
      cmTryCompileExec.dir=cmTryCompileExec.dir {
      }
     }
    }
    CompilerIdC=CompilerIdC {
     CMakeCCompilerId.c
    }
    CompilerIdCXX=CompilerIdCXX {
     CMakeCXXCompilerId.cpp
    }
    gtest.dir=gtest.dir {
     DependInfo.cmake
     cmake_clean.cmake
     cmake_clean_target.cmake
     link.txt
     src=src {
     }
    }
    gtest_main.dir=gtest_main.dir {
     DependInfo.cmake
     cmake_clean.cmake
     cmake_clean_target.cmake
     link.txt
     src=src {
     }
    }
    gtest_unittest.dir=gtest_unittest.dir {
     DependInfo.cmake
     cmake_clean.cmake
     link.txt
     test=test {
     }
    }
   }
  }
  codegear=codegear {
  }
  fused-src=fused-src {
   gtest=gtest {
    gtest.h
   }
  }
  include=include {
   gtest=gtest {
    gtest-death-test.h
    gtest-message.h
    gtest-param-test.h
    gtest-spi.h
    gtest-test-part.h
    gtest-typed-test.h
    gtest.h
    gtest_pred_impl.h
    gtest_prod.h
    internal=internal {
     gtest-death-test-internal.h
     gtest-filepath.h
     gtest-internal.h
     gtest-linked_ptr.h
     gtest-param-util-generated.h
     gtest-param-util.h
     gtest-port.h
     gtest-string.h
     gtest-tuple.h
     gtest-type-util.h
    }
   }
  }
  m4=m4 {
  }
  make=make {
   Makefile
  }
  msvc=msvc {
  }
  samples=samples {
   prime_tables.h
   sample1.h
   sample2.h
   sample3-inl.h
   sample4.h
  }
  scripts=scripts {
   fuse_gtest_files.py
   gen_gtest_pred_impl.py
   pump.py
   test=test {
    Makefile
   }
  }
  src=src {
   gtest-internal-inl.h
  }
  test=test {
   gtest-param-test_test.h
   gtest-typed-test_test.h
   gtest_break_on_failure_unittest.py
   gtest_color_test.py
   gtest_env_var_test.py
   gtest_filter_unittest.py
   gtest_help_test.py
   gtest_list_tests_unittest.py
   gtest_output_test.py
   gtest_output_test_golden_lin.txt
   gtest_output_test_golden_win.txt
   gtest_shuffle_test.py
   gtest_test_utils.py
   gtest_throw_on_failure_test.py
   gtest_uninitialized_test.py
   gtest_xml_outfiles_test.py
   gtest_xml_output_unittest.py
   gtest_xml_test_utils.py
   production.h
   run_tests_util.py
   run_tests_util_test.py
  }
  xcode=xcode {
   Config=Config {
   }
   Resources=Resources {
   }
   Samples=Samples {
    FrameworkSample=FrameworkSample {
     widget.h
     WidgetFramework.xcodeproj=WidgetFramework.xcodeproj {
     }
    }
   }
   Scripts=Scripts {
    versiongenerate.py
   }
   gtest.xcodeproj=gtest.xcodeproj {
   }
  }
 }
 kernel=kernel {
  notes.txt
  binfmt=binfmt {
   CMakeLists.txt
   FindGoogleTest.cmake
   Makefile
   README.txt
   macros.cmake
   build=build {
    CMakeCache.txt
    Makefile
    cmake_install.cmake
    CMakeFiles=CMakeFiles {
     CMakeCCompiler.cmake
     CMakeCXXCompiler.cmake
     CMakeDirectoryInformation.cmake
     CMakeRuleHashes.txt
     CMakeSystem.cmake
     Makefile.cmake
     CMakeTmp=CMakeTmp {
      CMakeFiles=CMakeFiles {
       cmTryCompileExec.dir=cmTryCompileExec.dir {
       }
      }
     }
     CompilerIdC=CompilerIdC {
      CMakeCCompilerId.c
     }
     CompilerIdCXX=CompilerIdCXX {
      CMakeCXXCompilerId.cpp
     }
     Progress=Progress {
      count.txt
     }
    }
    src=src {
     Makefile
     cmake_install.cmake
     CMakeFiles=CMakeFiles {
      CMakeDirectoryInformation.cmake
     }
     example=example {
      Makefile
      cmake_install.cmake
      CMakeFiles=CMakeFiles {
       CMakeDirectoryInformation.cmake
       example.dir=example.dir {
        DependInfo.cmake
        cmake_clean.cmake
       }
       i386.elf.dir=i386.elf.dir {
        DependInfo.cmake
        cmake_clean.cmake
        link.txt
       }
       x86_64.elf.dir=x86_64.elf.dir {
        DependInfo.cmake
        cmake_clean.cmake
        link.txt
       }
      }
     }
     test=test {
      Makefile
      cmake_install.cmake
      CMakeFiles=CMakeFiles {
       CMakeDirectoryInformation.cmake
       test_libobinrun.dir=test_libobinrun.dir {
        DependInfo.cmake
        cmake_clean.cmake
        link.txt
       }
      }
     }
    }
   }
   src=src {
    CMakeLists.txt
    libobinrun.cpp
    example=example {
     CMakeLists.txt
     helloworld.c
    }
    test=test {
     CMakeLists.txt
     test_libobinrun.cpp
     data=data {
     }
    }
   }
  }
  simple=simple {
   Makefile
   hello.c
   hello.mod.c
  }
 }
 mjpeg=mjpeg {
  cuda=cuda {
   Makefile
   block.cu
   block.h
   common.h
   cudautil.h
   dct_compute.cu
   dct_quantize.cu
   dct_quantize.h
   dct_quantize_cpu.cu
   log.h
   mjpeg_encoder.cu
   mjpeg_encoder_old.cu
   mjpeg_encoder_old.h
   quanttbl.h
   timer.h
   write_out.cu
   write_out.h
   yuv.cu
   yuv.h
   test=test {
    Makefile
    be_unit.h
    block_cpu.cu
    block_cpu.h
    test_block.cu
    test_dct_compute.cu
   }
  }
  opencl=opencl {
   Makefile
   cl.hpp
   libmjpeg_encoder_cpu.cpp
   libmjpeg_encoder_cpu.hpp
   mjpeg_encoder_cpu.cpp
   mjpeg_encoder_cpu.hpp
   testexample1.cpp
   testexample2.cpp
  }
  simple_c=simple_c {
   Makefile
   mjpeg_encoder.c
   mjpeg_encoder.h
  }
 }
 notes=notes {
  2010-02-08.txt
  2010-09-29.rst
  config.txt
 }
 sandbox=sandbox/src {
  CMakeLists.txt
  exec=exec {
   CMakeLists.txt
   execfile.c
   execfile2.c
  }
  simplescheduler=simplescheduler CD=. {
   CMakeLists.txt
   dct.c
   helloworld.c
   helloworld_cuda.cu
   simple.c
  }
  dlopen=dlopen {
   CMakeLists.txt
   loader.c
   loader.h
   testx86.c
  }
  librarysched=librarysched {
   CMakeLists.txt
   loader.c
   loader.h
   simplesum=simplesum {
    CMakeLists.txt
    cuda.cu
    x86.c
   }
  }
 }
}
opencl-on-different-processors=~/code/opencl-on-different-processors/src filter="*.cl *.c *.cpp *.h *.hpp *.py *.sh" {
 benchmark=benchmark {
  apps.cpp
  apps.h
  benchmark.cpp
  cl.hpp
  clutil.cpp
  clutil.h
  copy_memory.cpp
  copy_memory.h
  examples.cpp
  examples.h
  logical_ops.cpp
  logical_ops.h
  loops.cpp
  loops.h
  mathoperations.cpp
  mathoperations.h
  run.sh
  timer.cpp
  timer.h
 }
 tests=tests {
  clutil.hpp
  common.c
  common.h
  deviceinfo.h
  devicetypes.c
  error.h
  gather_data.py
  global_memory.c
  global_memory.cl
  global_memory.h
  log.h
  loop.c
  loop.cl
  loop2d.c
  opencl.h
  simple.c
  templates.cpp
  timer.h
 }
}

devilry-django=~/code/devilry-django CD=devilry filter="*.py *.html *.rst *.txt *.js *.css *.json *.conf *.sh Makefile" {
 README.rst
 doc/developer=doc/source/developer {
  commandline.rst
  contents.rst
  contribute.rst
  core.deliverystore.rst
  core.models.rst
  core.utils.rst
  documentation.rst
  grade-plugins.rst
  overview.rst
  plugins.rst
  selenium-tests.rst
  xmlrpc.rst
 }
 devilry.simplified=devilry/simplified{
 }
 devilry.gui=devilry/gui {
  templates/devilry/gui=templates/devilry/gui {
  }
 }
 themes/devilry=devilry/resources/gui/themes/devilry {
 }
 devilry.addons.guiexamples=devilry/addons/guiexamples {
  templates=templates/devilry/guiexamples {
  }
 }
 devilry.adminscripts=devilry/adminscripts {
  __init__.py
  common.py
  create_testgroups.py
  dashboardviews.py
  dbsanity.py
  devilry-backup.py
  devilry-dbsanity.py
  devilry-export-periodstatus.py
  devilry-user.py
  devilry_plugin.py
  models.py
  urls.py
  views.py
  templates=templates/devilry/adminscripts/ {
   base.django.html
   dbsanity-check.django.html
   dbsanity-fix.django.html
   overview.django.html
  }
 }
 devilry=devilry {
  Makefile
  Makefile.readme.rst
  TODO.txt
  __init__.py
  manage.py
  settings.py
  settings_production.py
  settings_productiontest.py
  urls.py
 }
 devilry.core=devilry/core {
  __init__.py
  admin.py
  dbsanity.py
  deliverystore.py
  devilry_email.py
  devilry_plugin.py
  gradeplugin.py
  models.py
  pluginloader.py
  templatecontext.py
  testhelpers.py
  tests.py
  fixtures=fixtures {
   example=example {
    README.txt
    data.json
    grade_approved.json
    grade_default.json
    grade_rstschema.json
    minimaldata.json
    minimalusers.json
    users.json
   }
  }
  utils=utils {
   GroupAssignments.py
   GroupNodes.py
   OrderedDictFallback.py
   __init__.py
   assignmentgroup.py
   coreutils.py
   delivery_collection.py
   profile.py
   verify_unique_entries.py
  }
 }
 devilry.ui=devilry/ui {
  __init__.py
  actionregistry.py
  defaults.py
  examiner.py
  fields.py
  filtertable.py
  messages.py
  models.py
  multifile.py
  templatetags_helpers.py
  tests.py
  urls.py
  views.py
  widgets.py
  templatetags=templatetags {
   __init__.py
   actionregistry.py
   inlinestyles.py
   rst_to_html.py
  }
  templates/devilry/ui=templates/devilry/ui {
   base-wsidebar.django.html
   base.django.html
   filtertable.django.html
   login.django.html
   rst_preview.django.html
   skintest-typicalpara.django.html
   skintest.django.html
   include=include {
    assignment_group_chooser.django.html
    datatables.django.html
    feedback.django.html
    form-list.django.html
    show_feedback.django.html
    tabular-inline-noheader.django.html
    tabular-inline.django.html
   }
  }
 }
 devilry.addons.admin=devilry/addons/admin {
  __init__.py
  actionregistry.py
  assignmentgroup_filtertable.py
  dashboardviews.py
  devilry_plugin.py
  seleniumtests.py
  urls.py
  views=views {
   __init__.py
   assignment.py
   assignmentgroup.py
   node.py
   period.py
   shortcuts.py
   subject.py
  }
  templates/devilry/admin=templates/devilry/admin {
   base.django.html
   bulkcreate_assignmentgroups_base.django.html
   copy-groups.django.html
   create_assignmentgroups.django.html
   create_deadline.django.html
   create_deadlines_base.django.html
   edit_assignment.django.html
   edit_assignmentgroup.django.html
   edit_assignmentgroup_base.django.html
   edit_node.django.html
   gradeplugin_base.django.html
   list-nodes-generic.django.html
   random-dist-examiners.django.html
   set-examiners.django.html
   verify_assignmentgroups.django.html
   dashboard=dashboard {
    admin_important.django.html
    stats.django.html
   }
  }
 }
 devilry.addons.student=devilry/addons/student {
  __init__.py
  actionregistry.py
  dashboardviews.py
  devilry_plugin.py
  models.py
  seleniumtests.py
  tests.py
  urls.py
  views.py
  templates/devilry/student=templates/devilry/student {
   add_delivery.django.html
   base.django.html
   list_assignments.django.html
   show_assignmentgroup.django.html
   show_delivery.django.html
   include=include{
    assignment_group_chooser.django.html
    assignment_group_info.django.html
    deliveryinfo.django.html
    deliverypreview.django.html
    groupinfo.django.html
    list_assignments.django.html
   }
   dashboard=dashboard{
    student_important.django.html
   }
  }
 }
 devilry.addons.examiner=devilry/addons/examiner {
  __init__.py
  dashboardviews.py
  devilry_plugin.py
  feedback_view.py
  models.py
  seleniumtests.py
  tests.py
  urls.py
  utils.py
  views.py
  templates/devilry/examiner=templates/devilry/examiner {
   base.django.html
   create_deadlines.django.html
   delivery-base.django.html
   edit-deadline.django.html
   edit_feedback.django.html
   group-base.django.html
   list_assignmentgroups.django.html
   list_assignments.django.html
   list_deliveries.django.html
   selected-assignmentgroups-base.django.html
   show_assignmentgroup.django.html
   show_emails.django.html
   successful_delivery.django.html
   dashboard=dashboard {
    examiner_important.django.html
    footerbuttons.django.html
    not_closed.django.html
    not_corrected.django.html
    not_published.django.html
    viewbase.django.html
   }
   include=include {
    deliveries_by_deadline.django.html
    deliverylisting.django.html
    groupinfo-table.django.html
    list-deliveries.django.html
    list_assignments.django.html
   }
  }
 }
 devilry.addons.quickdash=devilry/addons/quickdash {
  __init__.py
  dashboardplugin_registry.py
  defaults.py
  models.py
  tests.py
  urls.py
  views.py
  templates/devilry/quickdash=templates/devilry/quickdash {
   main.django.html
   viewbase.django.html
   viewbase_wfooter.django.html
  }
 }
 devilry.addons.grade_default=devilry/addons/grade_default {
  __init__.py
  admin.py
  devilry_plugin.py
  gradeviews.py
  models.py
 }
 devilry.addons.grade_approved=devilry/addons/grade_approved {
  __init__.py
  devilry_plugin.py
  gradeviews.py
  models.py
 }
 devilry.addons.grade_schema=devilry/addons/grade_schema {
  __init__.py
  devilry_plugin.py
  gradeviews.py
  models.py
  urls.py
  views.py
  templates/devilry/grade_schema=templates/devilry/grade_schema {
   edit.django.html
   feedback.django.html
  }
 }
 devilry.addons.grade_rstschema=devilry/addons/grade_rstschema {
  __init__.py
  dbsanity.py
  devilry_plugin.py
  field.py
  gradeviews.py
  html.py
  models.py
  parser.py
  schema-example.rst
  spec.py
  text.py
  tst.py
  urls.py
  views.py
  templates/devilry/grade_rstschema=templates/devilry/grade_rstschema {
   edit.django.html
   feedback.django.html
   preview_rstschemadef.django.html
  }
 }
 devilry.addons.gradestats=devilry/addons/gradestats {
  __init__.py
  devilry_plugin.py
  models.py
  tests.py
  urls.py
  views.py
  templates/devilry/gradestats=templates/devilry/gradestats {
   admin-user.django.html
   base.django.html
   periodstats.django.html
   user-base.django.html
   user.django.html
  }
 }
 devilry.xmlrpc=devilry/xmlrpc {
  __init__.py
  models.py
  testhelpers.py
  tests.py
  urls.py
  views.py
  xmlrpc.py
  templates=templates/devilry/xmlrpc {
   xmlrpcdoc.django.html
  }
 }
 devilry.addons.xmlrpc_examiner=devilry/addons/xmlrpc_examiner {
  __init__.py
  models.py
  tests.py
  urls.py
  views.py
 }
 devilry.xmlrpc_client=devilry/xmlrpc_client {
  DEVELOP.rst
  __init__.py
  assignmenttree.py
  cli.py
  cookie_transport.py
  cookies.txt
  devilry-examiner.py
  examinercmd.py
  exampleclient.py
  ez_setup.py
  models.py
  setup.py
  tests.py
  fixtures=fixtures/tests/xmlrpc_client/ {
   core.json
   users.json
  }
 }
 resources=devilry/resources {
  base.css
  colors.txt
  forms.css
  rst.css
  tables.css
  markitup=markitup {
   images=images {
    style.css
   }
   markitup=markitup {
    jquery.markitup.js
    jquery.markitup.pack.js
    sets=sets {
     rst=rst {
      rst.js
      rstschemadef.js
      style.css
     }
    }
    skins=skins {
     simple=simple {
      style.css
      images=images {
      }
     }
    }
    templates=templates {
     preview.css
     preview.html
    }
   }
  }
  superadminmedia=superadminmedia {
   css=css {
    base.css
    changelists.css
    dashboard.css
    forms.css
    ie.css
    login.css
    rtl.css
    widgets.css
   }
   img=img {
    admin=admin {
    }
    gis=gis {
    }
   }
   js=js {
    LICENSE-JQUERY.txt
    SelectBox.js
    SelectFilter2.js
    actions.js
    actions.min.js
    calendar.js
    collapse.js
    collapse.min.js
    compress.py
    core.js
    dateparse.js
    getElementsBySelector.js
    inlines.js
    inlines.min.js
    jquery.js
    jquery.min.js
    timeparse.js
    urlify.js
    admin=admin {
     DateTimeShortcuts.js
     RelatedObjectLookups.js
     ordering.js
    }
   }
  }
  ui=ui {
   js=js {
    datewidget.js
    devilry-utils.js
    jquery.autocompletetable.js
    jquery.devilrymultifile.js
    jquery.filtertable.js
    multiSelect_char_candidates_field.js
    multiSelect_char_user_field.js
    rstedit_widget.js
    timewidget.js
   }
  }
 }
 doc=doc/source {
  conf.py
  contents.rst
  index.rst
  _static=_static {
  }
  _templates=_templates {
   indexsidebar.html
  }
  _themes/devilry=_themes/devilry {
   layout.html
   theme.conf
  }
  developer=developer{
   commandline.rst
   contents.rst
   contribute.rst
   core.deliverystore.rst
   core.models.rst
   core.utils.rst
   documentation.rst
   grade-plugins.rst
   overview.rst
   plugins.rst
   selenium-tests.rst
   xmlrpc.rst
  }
  user=user{
   contents.rst
   overview.rst
   xmlrpc_client.rst
  }
 }
}
django=~/src/django-trunk filter="*.py *.rst *.json *.txt *.js *.html *.css" {
 setup.py
 django=django {
  __init__.py
  bin=bin {
   __init__.py
   compile-messages.py
   daily_cleanup.py
   django-admin.py
   make-messages.py
   unique-messages.py
   profiling=profiling {
    __init__.py
    gather_profile_stats.py
   }
  }
  conf=conf {
   __init__.py
   global_settings.py
   app_template=app_template {
    __init__.py
    models.py
    tests.py
    views.py
   }
   locale=locale {
    __init__.py
    ar=ar {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    bg=bg {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    bn=bn {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    bs=bs {
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ca=ca {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    cs=cs {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    cy=cy {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    da=da {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    de=de {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    el=el {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    en=en {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    es=es {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    es_AR=es_AR {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    et=et {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    eu=eu {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    fa=fa {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    fi=fi {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    fr=fr {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    fy_NL=fy_NL {
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ga=ga {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    gl=gl {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    he=he {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    hi=hi {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    hr=hr {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    hu=hu {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    is=is {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    it=it {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ja=ja {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ka=ka {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    km=km {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    kn=kn {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ko=ko {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    lt=lt {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    lv=lv {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    mk=mk {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    nl=nl {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    no=no {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    pl=pl {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    pt=pt {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    pt_BR=pt_BR {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ro=ro {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ru=ru {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sk=sk {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sl=sl {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sq=sq {
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sr=sr {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sr_Latn=sr_Latn {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    sv=sv {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    ta=ta {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    te=te {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    th=th {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    tr=tr {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    uk=uk {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    vi=vi {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    zh_CN=zh_CN {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
    zh_TW=zh_TW {
     __init__.py
     formats.py
     LC_MESSAGES=LC_MESSAGES {
     }
    }
   }
   project_template=project_template {
    __init__.py
    manage.py
    settings.py
    urls.py
   }
   urls=urls {
    __init__.py
    defaults.py
    i18n.py
    shortcut.py
   }
  }
  contrib=contrib {
   __init__.py
   admin=admin {
    __init__.py
    actions.py
    filterspecs.py
    helpers.py
    models.py
    options.py
    sites.py
    util.py
    validation.py
    widgets.py
    media=media {
     css=css {
      base.css
      changelists.css
      dashboard.css
      forms.css
      ie.css
      login.css
      rtl.css
      widgets.css
     }
     img=img {
      admin=admin {
      }
      gis=gis {
      }
     }
     js=js {
      LICENSE-JQUERY.txt
      SelectBox.js
      SelectFilter2.js
      actions.js
      actions.min.js
      calendar.js
      collapse.js
      collapse.min.js
      compress.py
      core.js
      dateparse.js
      getElementsBySelector.js
      inlines.js
      inlines.min.js
      jquery.js
      jquery.min.js
      timeparse.js
      urlify.js
      admin=admin {
       DateTimeShortcuts.js
       RelatedObjectLookups.js
       ordering.js
      }
     }
    }
    templates=templates {
     admin=admin {
      404.html
      500.html
      actions.html
      app_index.html
      base.html
      base_site.html
      change_form.html
      change_list.html
      change_list_results.html
      date_hierarchy.html
      delete_confirmation.html
      delete_selected_confirmation.html
      filter.html
      index.html
      invalid_setup.html
      login.html
      object_history.html
      pagination.html
      prepopulated_fields_js.html
      search_form.html
      submit_line.html
      template_validator.html
      auth=auth {
       user=user {
        add_form.html
        change_password.html
       }
      }
      edit_inline=edit_inline {
       stacked.html
       tabular.html
      }
      includes=includes {
       fieldset.html
      }
     }
     admin_doc=admin_doc {
     }
     registration=registration {
      logged_out.html
      password_change_done.html
      password_change_form.html
      password_reset_complete.html
      password_reset_confirm.html
      password_reset_done.html
      password_reset_email.html
      password_reset_form.html
     }
     widget=widget {
     }
    }
    templatetags=templatetags {
     __init__.py
     admin_list.py
     admin_modify.py
     adminmedia.py
     log.py
    }
    views=views {
     __init__.py
     decorators.py
     main.py
     template.py
    }
   }
   admindocs=admindocs {
    __init__.py
    models.py
    urls.py
    utils.py
    views.py
    templates=templates {
     admin_doc=admin_doc {
      bookmarklets.html
      index.html
      missing_docutils.html
      model_detail.html
      model_index.html
      template_detail.html
      template_filter_index.html
      template_tag_index.html
      view_detail.html
      view_index.html
     }
    }
    tests=tests {
     __init__.py
     fields.py
    }
   }
   auth=auth {
    __init__.py
    admin.py
    backends.py
    context_processors.py
    create_superuser.py
    decorators.py
    forms.py
    middleware.py
    models.py
    tokens.py
    urls.py
    views.py
    fixtures=fixtures {
     authtestdata.json
    }
    handlers=handlers {
     __init__.py
     modpython.py
    }
    management=management {
     __init__.py
     commands=commands {
      __init__.py
      changepassword.py
      createsuperuser.py
     }
    }
    tests=tests {
     __init__.py
     auth_backends.py
     basic.py
     forms.py
     models.py
     remote_user.py
     tokens.py
     urls.py
     views.py
     templates=templates {
      registration=registration {
       login.html
       password_reset_complete.html
       password_reset_confirm.html
       password_reset_done.html
       password_reset_email.html
       password_reset_form.html
      }
     }
    }
   }
   comments=comments {
    __init__.py
    admin.py
    feeds.py
    forms.py
    managers.py
    models.py
    moderation.py
    signals.py
    urls.py
    templates=templates {
     comments=comments {
      400-debug.html
      approve.html
      approved.html
      base.html
      delete.html
      deleted.html
      flag.html
      flagged.html
      form.html
      list.html
      posted.html
      preview.html
     }
    }
    templatetags=templatetags {
     __init__.py
     comments.py
    }
    views=views {
     __init__.py
     comments.py
     moderation.py
     utils.py
    }
   }
   contenttypes=contenttypes {
    __init__.py
    generic.py
    management.py
    models.py
    tests.py
    views.py
   }
   csrf=csrf {
    __init__.py
    middleware.py
   }
   databrowse=databrowse {
    __init__.py
    datastructures.py
    sites.py
    urls.py
    views.py
    plugins=plugins {
     __init__.py
     calendars.py
     fieldchoices.py
     objects.py
    }
    templates=templates {
     databrowse=databrowse {
      base.html
      base_site.html
      calendar_day.html
      calendar_homepage.html
      calendar_main.html
      calendar_month.html
      calendar_year.html
      choice_detail.html
      choice_list.html
      fieldchoice_detail.html
      fieldchoice_homepage.html
      fieldchoice_list.html
      homepage.html
      model_detail.html
      object_detail.html
     }
    }
   }
   flatpages=flatpages {
    __init__.py
    admin.py
    middleware.py
    models.py
    urls.py
    views.py
   }
   formtools=formtools {
    __init__.py
    models.py
    preview.py
    test_urls.py
    tests.py
    utils.py
    wizard.py
    templates=templates {
     formtools=formtools {
      form.html
      preview.html
     }
    }
   }
   gis=gis {
    __init__.py
    feeds.py
    measure.py
    models.py
    shortcuts.py
    admin=admin {
     __init__.py
     options.py
     widgets.py
    }
    db=db {
     __init__.py
     backends=backends {
      __init__.py
      adapter.py
      base.py
      util.py
      mysql=mysql {
       __init__.py
       base.py
       creation.py
       introspection.py
       operations.py
      }
      oracle=oracle {
       __init__.py
       adapter.py
       base.py
       compiler.py
       creation.py
       introspection.py
       models.py
       operations.py
      }
      postgis=postgis {
       __init__.py
       adapter.py
       base.py
       creation.py
       introspection.py
       models.py
       operations.py
      }
      spatialite=spatialite {
       __init__.py
       adapter.py
       base.py
       client.py
       creation.py
       introspection.py
       models.py
       operations.py
      }
     }
     models=models {
      __init__.py
      aggregates.py
      fields.py
      manager.py
      proxy.py
      query.py
      sql=sql {
       __init__.py
       aggregates.py
       compiler.py
       conversion.py
       query.py
       where.py
      }
     }
    }
    forms=forms {
     __init__.py
     fields.py
    }
    gdal=gdal {
     __init__.py
     base.py
     datasource.py
     driver.py
     envelope.py
     error.py
     feature.py
     field.py
     geometries.py
     geomtype.py
     layer.py
     libgdal.py
     srs.py
     prototypes=prototypes {
      __init__.py
      ds.py
      errcheck.py
      generation.py
      geom.py
      srs.py
     }
     tests=tests {
      __init__.py
      test_driver.py
      test_ds.py
      test_envelope.py
      test_geom.py
      test_srs.py
     }
    }
    geometry=geometry {
     __init__.py
     regex.py
     backend=backend {
      __init__.py
      geos.py
     }
    }
    geos=geos {
     __init__.py
     base.py
     collections.py
     coordseq.py
     error.py
     factory.py
     geometry.py
     io.py
     libgeos.py
     linestring.py
     mutable_list.py
     point.py
     polygon.py
     prepared.py
     prototypes=prototypes {
      __init__.py
      coordseq.py
      errcheck.py
      geom.py
      io.py
      misc.py
      predicates.py
      prepared.py
      threadsafe.py
      topology.py
     }
     tests=tests {
      __init__.py
      test_geos.py
      test_geos_mutation.py
      test_io.py
      test_mutable_list.py
     }
    }
    management=management {
     __init__.py
     base.py
     commands=commands {
      __init__.py
      inspectdb.py
      ogrinspect.py
     }
    }
    maps=maps {
     __init__.py
     google=google {
      __init__.py
      gmap.py
      overlays.py
      zoom.py
     }
     openlayers=openlayers {
      __init__.py
     }
    }
    sitemaps=sitemaps {
     __init__.py
     georss.py
     kml.py
     views.py
    }
    templates=templates {
     gis=gis {
      admin=admin {
       openlayers.html
       openlayers.js
       osm.html
       osm.js
      }
      google=google {
       google-map.html
       google-map.js
       google-multi.js
       google-single.js
      }
      kml=kml {
      }
      sitemaps=sitemaps {
      }
     }
    }
    tests=tests {
     __init__.py
     geometries.py
     test_geoforms.py
     test_geoip.py
     test_measure.py
     test_spatialrefsys.py
     urls.py
     utils.py
     data=data {
      cities=cities {
      }
      counties=counties {
      }
      interstates=interstates {
      }
      test_point=test_point {
      }
      test_poly=test_poly {
      }
      test_vrt=test_vrt {
      }
     }
     distapp=distapp {
      __init__.py
      data.py
      models.py
      tests.py
     }
     geo3d=geo3d {
      __init__.py
      models.py
      tests.py
      views.py
     }
     geoapp=geoapp {
      __init__.py
      feeds.py
      models.py
      sitemaps.py
      test_feeds.py
      test_regress.py
      test_sitemaps.py
      tests.py
      urls.py
      fixtures=fixtures {
       initial_data.json
      }
     }
     geogapp=geogapp {
      __init__.py
      models.py
      tests.py
      fixtures=fixtures {
       initial_data.json
      }
     }
     layermap=layermap {
      __init__.py
      models.py
      tests.py
     }
     relatedapp=relatedapp {
      __init__.py
      models.py
      tests.py
     }
    }
    utils=utils {
     __init__.py
     geoip.py
     layermapping.py
     ogrinfo.py
     ogrinspect.py
     srs.py
     wkt.py
    }
   }
   humanize=humanize {
    __init__.py
    templatetags=templatetags {
     __init__.py
     humanize.py
    }
   }
   localflavor=localflavor {
    __init__.py
    ar=ar {
     __init__.py
     ar_provinces.py
     forms.py
    }
    at=at {
     __init__.py
     at_states.py
     forms.py
    }
    au=au {
     __init__.py
     au_states.py
     forms.py
    }
    br=br {
     __init__.py
     br_states.py
     forms.py
    }
    ca=ca {
     __init__.py
     ca_provinces.py
     forms.py
    }
    ch=ch {
     __init__.py
     ch_states.py
     forms.py
    }
    cl=cl {
     __init__.py
     cl_regions.py
     forms.py
    }
    cz=cz {
     __init__.py
     cz_regions.py
     forms.py
    }
    de=de {
     __init__.py
     de_states.py
     forms.py
    }
    es=es {
     __init__.py
     es_provinces.py
     es_regions.py
     forms.py
    }
    fi=fi {
     __init__.py
     fi_municipalities.py
     forms.py
    }
    fr=fr {
     __init__.py
     forms.py
     fr_department.py
    }
    generic=generic {
     __init__.py
     forms.py
    }
    id=id {
     __init__.py
     forms.py
     id_choices.py
    }
    ie=ie {
     __init__.py
     forms.py
     ie_counties.py
    }
    in_=in_ {
     __init__.py
     forms.py
     in_states.py
    }
    is_=is_ {
     __init__.py
     forms.py
     is_postalcodes.py
    }
    it=it {
     __init__.py
     forms.py
     it_province.py
     it_region.py
     util.py
    }
    jp=jp {
     __init__.py
     forms.py
     jp_prefectures.py
    }
    kw=kw {
     __init__.py
     forms.py
    }
    mx=mx {
     __init__.py
     forms.py
     mx_states.py
    }
    nl=nl {
     __init__.py
     forms.py
     nl_provinces.py
    }
    no=no {
     __init__.py
     forms.py
     no_municipalities.py
    }
    pe=pe {
     __init__.py
     forms.py
     pe_region.py
    }
    pl=pl {
     __init__.py
     forms.py
     pl_administrativeunits.py
     pl_voivodeships.py
    }
    pt=pt {
     __init__.py
     forms.py
    }
    ro=ro {
     __init__.py
     forms.py
     ro_counties.py
    }
    se=se {
     __init__.py
     forms.py
     se_counties.py
     utils.py
    }
    sk=sk {
     __init__.py
     forms.py
     sk_districts.py
     sk_regions.py
    }
    uk=uk {
     __init__.py
     forms.py
     uk_regions.py
    }
    us=us {
     __init__.py
     forms.py
     models.py
     us_states.py
    }
    uy=uy {
     __init__.py
     forms.py
     util.py
     uy_departaments.py
    }
    za=za {
     __init__.py
     forms.py
     za_provinces.py
    }
   }
   markup=markup {
    __init__.py
    models.py
    tests.py
    templatetags=templatetags {
     __init__.py
     markup.py
    }
   }
   messages=messages {
    __init__.py
    api.py
    constants.py
    context_processors.py
    middleware.py
    models.py
    utils.py
    storage=storage {
     __init__.py
     base.py
     cookie.py
     fallback.py
     session.py
     user_messages.py
    }
    tests=tests {
     __init__.py
     base.py
     cookie.py
     fallback.py
     middleware.py
     session.py
     urls.py
     user_messages.py
    }
   }
   redirects=redirects {
    __init__.py
    admin.py
    middleware.py
    models.py
   }
   sessions=sessions {
    __init__.py
    middleware.py
    models.py
    tests.py
    backends=backends {
     __init__.py
     base.py
     cache.py
     cached_db.py
     db.py
     file.py
    }
   }
   sitemaps=sitemaps {
    __init__.py
    views.py
    management=management {
     __init__.py
     commands=commands {
      __init__.py
      ping_google.py
     }
    }
    templates=templates {
    }
   }
   sites=sites {
    __init__.py
    admin.py
    management.py
    managers.py
    models.py
    tests.py
   }
   syndication=syndication {
    __init__.py
    feeds.py
    views.py
   }
   webdesign=webdesign {
    __init__.py
    lorem_ipsum.py
    models.py
    tests.py
    templatetags=templatetags {
     __init__.py
     webdesign.py
    }
   }
  }
  core=core {
   __init__.py
   context_processors.py
   exceptions.py
   paginator.py
   signals.py
   template_loader.py
   urlresolvers.py
   validators.py
   xheaders.py
   cache=cache {
    __init__.py
    backends=backends {
     __init__.py
     base.py
     db.py
     dummy.py
     filebased.py
     locmem.py
     memcached.py
    }
   }
   files=files {
    __init__.py
    base.py
    images.py
    locks.py
    move.py
    storage.py
    temp.py
    uploadedfile.py
    uploadhandler.py
    utils.py
   }
   handlers=handlers {
    __init__.py
    base.py
    modpython.py
    profiler-hotshot.py
    wsgi.py
   }
   mail=mail {
    __init__.py
    message.py
    utils.py
    backends=backends {
     __init__.py
     base.py
     console.py
     dummy.py
     filebased.py
     locmem.py
     smtp.py
    }
   }
   management=management {
    __init__.py
    base.py
    color.py
    sql.py
    validation.py
    commands=commands {
     __init__.py
     cleanup.py
     compilemessages.py
     createcachetable.py
     dbshell.py
     diffsettings.py
     dumpdata.py
     flush.py
     inspectdb.py
     loaddata.py
     makemessages.py
     reset.py
     runfcgi.py
     runserver.py
     shell.py
     sql.py
     sqlall.py
     sqlclear.py
     sqlcustom.py
     sqlflush.py
     sqlindexes.py
     sqlinitialdata.py
     sqlreset.py
     sqlsequencereset.py
     startapp.py
     startproject.py
     syncdb.py
     test.py
     testserver.py
     validate.py
    }
   }
   serializers=serializers {
    __init__.py
    base.py
    json.py
    python.py
    pyyaml.py
    xml_serializer.py
   }
   servers=servers {
    __init__.py
    basehttp.py
    fastcgi.py
   }
  }
  db=db {
   __init__.py
   transaction.py
   utils.py
   backends=backends {
    __init__.py
    creation.py
    signals.py
    util.py
    dummy=dummy {
     __init__.py
     base.py
    }
    mysql=mysql {
     __init__.py
     base.py
     client.py
     creation.py
     introspection.py
     validation.py
    }
    oracle=oracle {
     __init__.py
     base.py
     client.py
     compiler.py
     creation.py
     introspection.py
    }
    postgresql=postgresql {
     __init__.py
     base.py
     client.py
     creation.py
     introspection.py
     operations.py
     version.py
    }
    postgresql_psycopg2=postgresql_psycopg2 {
     __init__.py
     base.py
     introspection.py
    }
    sqlite3=sqlite3 {
     __init__.py
     base.py
     client.py
     creation.py
     introspection.py
    }
   }
   models=models {
    __init__.py
    aggregates.py
    base.py
    expressions.py
    loading.py
    manager.py
    options.py
    query.py
    query_utils.py
    related.py
    signals.py
    fields=fields {
     __init__.py
     files.py
     proxy.py
     related.py
     subclassing.py
    }
    sql=sql {
     __init__.py
     aggregates.py
     compiler.py
     constants.py
     datastructures.py
     expressions.py
     query.py
     subqueries.py
     where.py
    }
   }
  }
  dispatch=dispatch {
   __init__.py
   dispatcher.py
   license.txt
   saferef.py
  }
  forms=forms {
   __init__.py
   fields.py
   forms.py
   formsets.py
   models.py
   util.py
   widgets.py
   extras=extras {
    __init__.py
    widgets.py
   }
  }
  http=http {
   __init__.py
   multipartparser.py
   utils.py
  }
  middleware=middleware {
   __init__.py
   cache.py
   common.py
   csrf.py
   doc.py
   gzip.py
   http.py
   locale.py
   transaction.py
  }
  shortcuts=shortcuts {
   __init__.py
  }
  template=template {
   __init__.py
   context.py
   debug.py
   defaultfilters.py
   defaulttags.py
   loader.py
   loader_tags.py
   smartif.py
   loaders=loaders {
    __init__.py
    app_directories.py
    cached.py
    eggs.py
    filesystem.py
   }
  }
  templatetags=templatetags {
   __init__.py
   cache.py
   i18n.py
  }
  test=test {
   __init__.py
   _doctest.py
   client.py
   signals.py
   simple.py
   testcases.py
   utils.py
  }
  utils=utils {
   __init__.py
   _decimal.py
   _os.py
   _threading_local.py
   autoreload.py
   cache.py
   checksums.py
   copycompat.py
   daemonize.py
   datastructures.py
   dateformat.py
   dates.py
   datetime_safe.py
   decorators.py
   encoding.py
   feedgenerator.py
   formats.py
   functional.py
   hashcompat.py
   html.py
   http.py
   importlib.py
   itercompat.py
   numberformat.py
   regex_helper.py
   safestring.py
   stopwords.py
   synch.py
   termcolors.py
   text.py
   thread_support.py
   timesince.py
   tree.py
   tzinfo.py
   version.py
   xmlutils.py
   simplejson=simplejson {
    LICENSE.txt
    __init__.py
    decoder.py
    encoder.py
    scanner.py
    tool.py
   }
   translation=translation {
    __init__.py
    trans_null.py
    trans_real.py
   }
  }
  views=views {
   __init__.py
   csrf.py
   debug.py
   defaults.py
   i18n.py
   static.py
   decorators=decorators {
    __init__.py
    cache.py
    csrf.py
    gzip.py
    http.py
    vary.py
   }
   generic=generic {
    __init__.py
    create_update.py
    date_based.py
    list_detail.py
    simple.py
   }
  }
 }
 docs=docs {
  conf.py
  contents.txt
  glossary.txt
  index.txt
  _build=_build {
  }
  _ext=_ext {
   applyxrefs.py
   djangodocs.py
   literals_to_xrefs.py
  }
  _static=_static {
   default.css
   djangodocs.css
   homepage.css
   reset-fonts-grids.css
  }
  _templates=_templates {
   genindex.html
   layout.html
   modindex.html
   search.html
  }
  faq=faq {
   admin.txt
   contributing.txt
   general.txt
   help.txt
   index.txt
   install.txt
   models.txt
   usage.txt
  }
  howto=howto {
   apache-auth.txt
   auth-remote-user.txt
   custom-file-storage.txt
   custom-management-commands.txt
   custom-model-fields.txt
   custom-template-tags.txt
   error-reporting.txt
   i18n.txt
   index.txt
   initial-data.txt
   jython.txt
   legacy-databases.txt
   outputting-csv.txt
   outputting-pdf.txt
   static-files.txt
   deployment=deployment {
    fastcgi.txt
    index.txt
    modpython.txt
    modwsgi.txt
   }
  }
  internals=internals {
   committers.txt
   contributing.txt
   deprecation.txt
   documentation.txt
   index.txt
   release-process.txt
   svn.txt
   _images=_images {
   }
  }
  intro=intro {
   index.txt
   install.txt
   overview.txt
   tutorial01.txt
   tutorial02.txt
   tutorial03.txt
   tutorial04.txt
   whatsnext.txt
   _images=_images {
   }
  }
  man=man {
  }
  misc=misc {
   api-stability.txt
   design-philosophies.txt
   distributions.txt
   index.txt
  }
  obsolete=obsolete {
   admin-css.txt
   index.txt
   _images=_images {
   }
  }
  ref=ref {
   authbackends.txt
   databases.txt
   django-admin.txt
   generic-views.txt
   index.txt
   middleware.txt
   request-response.txt
   settings.txt
   signals.txt
   unicode.txt
   validators.txt
   contrib=contrib {
    auth.txt
    contenttypes.txt
    csrf.txt
    databrowse.txt
    flatpages.txt
    humanize.txt
    index.txt
    localflavor.txt
    messages.txt
    redirects.txt
    sitemaps.txt
    sites.txt
    syndication.txt
    webdesign.txt
    _images=_images {
    }
    admin=admin {
     actions.txt
     index.txt
     _images=_images {
     }
    }
    comments=comments {
     custom.txt
     example.txt
     forms.txt
     index.txt
     models.txt
     moderation.txt
     settings.txt
     signals.txt
     upgrade.txt
    }
    formtools=formtools {
     form-preview.txt
     form-wizard.txt
     index.txt
    }
   }
   files=files {
    file.txt
    index.txt
    storage.txt
   }
   forms=forms {
    api.txt
    fields.txt
    index.txt
    validation.txt
    widgets.txt
   }
   models=models {
    fields.txt
    index.txt
    instances.txt
    options.txt
    querysets.txt
    relations.txt
   }
   templates=templates {
    api.txt
    builtins.txt
    index.txt
   }
  }
  releases=releases {
   0.95.txt
   0.96.txt
   1.0-alpha-1.txt
   1.0-alpha-2.txt
   1.0-beta-2.txt
   1.0-beta.txt
   1.0-porting-guide.txt
   1.0.1.txt
   1.0.2.txt
   1.0.txt
   1.1-alpha-1.txt
   1.1-beta-1.txt
   1.1-rc-1.txt
   1.1.2.txt
   1.1.txt
   1.2-alpha-1.txt
   1.2-beta-1.txt
   1.2.txt
   index.txt
  }
  topics=topics {
   auth.txt
   cache.txt
   conditional-view-processing.txt
   email.txt
   files.txt
   generic-views.txt
   index.txt
   install.txt
   pagination.txt
   serialization.txt
   settings.txt
   signals.txt
   templates.txt
   testing.txt
   db=db {
    aggregation.txt
    index.txt
    managers.txt
    models.txt
    multi-db.txt
    optimization.txt
    queries.txt
    sql.txt
    transactions.txt
   }
   forms=forms {
    formsets.txt
    index.txt
    media.txt
    modelforms.txt
   }
   http=http {
    file-uploads.txt
    generic-views.txt
    index.txt
    middleware.txt
    sessions.txt
    shortcuts.txt
    urls.txt
    views.txt
    _images=_images {
    }
   }
   i18n=i18n {
    deployment.txt
    index.txt
    internationalization.txt
    localization.txt
   }
  }
 }
 extras=extras {
  README.TXT
  csrf_migration_helper.py
 }
 scripts=scripts {
 }
 tests=tests {
  runtests.py
  test_sqlite.py
  urls.py
  modeltests=modeltests {
   __init__.py
   aggregation=aggregation {
    __init__.py
    models.py
    fixtures=fixtures {
     initial_data.json
    }
   }
   basic=basic {
    __init__.py
    models.py
   }
   choices=choices {
    __init__.py
    models.py
   }
   custom_columns=custom_columns {
    __init__.py
    models.py
   }
   custom_managers=custom_managers {
    __init__.py
    models.py
   }
   custom_methods=custom_methods {
    __init__.py
    models.py
   }
   custom_pk=custom_pk {
    __init__.py
    fields.py
    models.py
   }
   defer=defer {
    __init__.py
    models.py
   }
   delete=delete {
    __init__.py
    models.py
   }
   empty=empty {
    __init__.py
    models.py
   }
   expressions=expressions {
    __init__.py
    models.py
   }
   field_defaults=field_defaults {
    __init__.py
    models.py
   }
   field_subclassing=field_subclassing {
    __init__.py
    fields.py
    models.py
    tests.py
   }
   files=files {
    __init__.py
    models.py
   }
   fixtures=fixtures {
    __init__.py
    models.py
    fixtures=fixtures {
     db_fixture_1.default.json
     db_fixture_3.nosuchdb.json
     fixture1.json
     fixture2.json
     fixture6.json
     fixture8.json
     initial_data.json
    }
   }
   fixtures_model_package=fixtures_model_package {
    __init__.py
    fixtures=fixtures {
     fixture1.json
     fixture2.json
     initial_data.json
    }
    models=models {
     __init__.py
    }
   }
   force_insert_update=force_insert_update {
    __init__.py
    models.py
   }
   generic_relations=generic_relations {
    __init__.py
    models.py
   }
   get_latest=get_latest {
    __init__.py
    models.py
   }
   get_object_or_404=get_object_or_404 {
    __init__.py
    models.py
   }
   get_or_create=get_or_create {
    __init__.py
    models.py
   }
   invalid_models=invalid_models {
    __init__.py
    models.py
   }
   lookup=lookup {
    __init__.py
    models.py
   }
   m2m_and_m2o=m2m_and_m2o {
    __init__.py
    models.py
   }
   m2m_intermediary=m2m_intermediary {
    __init__.py
    models.py
   }
   m2m_multiple=m2m_multiple {
    __init__.py
    models.py
   }
   m2m_recursive=m2m_recursive {
    __init__.py
    models.py
   }
   m2m_signals=m2m_signals {
    __init__.py
    models.py
   }
   m2m_through=m2m_through {
    __init__.py
    models.py
   }
   m2o_recursive=m2o_recursive {
    __init__.py
    models.py
   }
   m2o_recursive2=m2o_recursive2 {
    __init__.py
    models.py
   }
   many_to_many=many_to_many {
    __init__.py
    models.py
   }
   many_to_one=many_to_one {
    __init__.py
    models.py
   }
   many_to_one_null=many_to_one_null {
    __init__.py
    models.py
   }
   model_forms=model_forms {
    __init__.py
    models.py
    tests.py
   }
   model_formsets=model_formsets {
    __init__.py
    models.py
    tests.py
   }
   model_inheritance=model_inheritance {
    __init__.py
    models.py
   }
   model_inheritance_same_model_name=model_inheritance_same_model_name {
    __init__.py
    models.py
    tests.py
   }
   model_package=model_package {
    __init__.py
    tests.py
    models=models {
     __init__.py
     article.py
     publication.py
    }
   }
   mutually_referential=mutually_referential {
    __init__.py
    models.py
   }
   one_to_one=one_to_one {
    __init__.py
    models.py
   }
   or_lookups=or_lookups {
    __init__.py
    models.py
   }
   order_with_respect_to=order_with_respect_to {
    __init__.py
    models.py
   }
   ordering=ordering {
    __init__.py
    models.py
   }
   pagination=pagination {
    __init__.py
    models.py
   }
   properties=properties {
    __init__.py
    models.py
   }
   proxy_models=proxy_models {
    __init__.py
    models.py
    fixtures=fixtures {
     mypeople.json
    }
   }
   raw_query=raw_query {
    __init__.py
    models.py
    tests.py
    fixtures=fixtures {
     initial_data.json
    }
   }
   reserved_names=reserved_names {
    __init__.py
    models.py
   }
   reverse_lookup=reverse_lookup {
    __init__.py
    models.py
   }
   save_delete_hooks=save_delete_hooks {
    __init__.py
    models.py
   }
   select_related=select_related {
    __init__.py
    models.py
   }
   serializers=serializers {
    __init__.py
    models.py
   }
   signals=signals {
    __init__.py
    models.py
    tests.py
   }
   str=str {
    __init__.py
    models.py
   }
   test_client=test_client {
    __init__.py
    models.py
    tests.py
    urls.py
    views.py
    fixtures=fixtures {
     testdata.json
    }
   }
   transactions=transactions {
    __init__.py
    models.py
   }
   unmanaged_models=unmanaged_models {
    __init__.py
    models.py
    tests.py
   }
   update=update {
    __init__.py
    models.py
   }
   user_commands=user_commands {
    __init__.py
    models.py
    management=management {
     __init__.py
     commands=commands {
      __init__.py
      dance.py
     }
    }
   }
   validation=validation {
    __init__.py
    models.py
    test_custom_messages.py
    test_unique.py
    tests.py
    validators.py
   }
   validators=validators {
    __init__.py
    models.py
    tests.py
   }
  }
  regressiontests=regressiontests {
   __init__.py
   admin_changelist=admin_changelist {
    __init__.py
    models.py
    tests.py
   }
   admin_inlines=admin_inlines {
    __init__.py
    models.py
    tests.py
    fixtures=fixtures {
    }
   }
   admin_ordering=admin_ordering {
    __init__.py
    models.py
   }
   admin_registration=admin_registration {
    __init__.py
    models.py
   }
   admin_scripts=admin_scripts {
    __init__.py
    models.py
    tests.py
    management=management {
     __init__.py
     commands=commands {
      __init__.py
      app_command.py
      base_command.py
      label_command.py
      noargs_command.py
     }
    }
   }
   admin_util=admin_util {
    __init__.py
    models.py
    tests.py
   }
   admin_validation=admin_validation {
    __init__.py
    models.py
   }
   admin_views=admin_views {
    __init__.py
    customadmin.py
    models.py
    tests.py
    urls.py
    views.py
    fixtures=fixtures {
     multiple-child-classes.json
    }
   }
   admin_widgets=admin_widgets {
    __init__.py
    models.py
    tests.py
    urls.py
    widgetadmin.py
    fixtures=fixtures {
    }
   }
   aggregation_regress=aggregation_regress {
    __init__.py
    models.py
    fixtures=fixtures {
     initial_data.json
    }
   }
   app_loading=app_loading {
    __init__.py
    models.py
    test_settings.py
    tests.py
    parent=parent {
     __init__.py
     app=app {
      __init__.py
     }
     app1=app1 {
      __init__.py
     }
     app_2=app_2 {
      __init__.py
     }
    }
   }
   backends=backends {
    __init__.py
    models.py
    tests.py
   }
   bash_completion=bash_completion {
    __init__.py
    models.py
    tests.py
    management=management {
     __init__.py
     commands=commands {
      __init__.py
      test_command.py
     }
    }
   }
   bug639=bug639 {
    __init__.py
    models.py
    tests.py
   }
   bug8245=bug8245 {
    __init__.py
    admin.py
    models.py
    tests.py
   }
   builtin_server=builtin_server {
    __init__.py
    models.py
    tests.py
   }
   cache=cache {
    __init__.py
    models.py
    tests.py
   }
   comment_tests=comment_tests {
    __init__.py
    models.py
    urls.py
    urls_admin.py
    custom_comments=custom_comments {
     __init__.py
     forms.py
     models.py
     views.py
    }
    fixtures=fixtures {
     comment_tests.json
    }
    tests=tests {
     __init__.py
     app_api_tests.py
     comment_form_tests.py
     comment_utils_moderators_tests.py
     comment_view_tests.py
     model_tests.py
     moderation_view_tests.py
     templatetag_tests.py
    }
   }
   conditional_processing=conditional_processing {
    __init__.py
    models.py
    urls.py
    views.py
   }
   context_processors=context_processors {
    __init__.py
    models.py
    tests.py
    urls.py
    views.py
    fixtures=fixtures {
    }
    templates=templates {
     context_processors=context_processors {
      auth_attrs_access.html
      auth_attrs_messages.html
      auth_attrs_no_access.html
      auth_attrs_perms.html
      auth_attrs_test_access.html
      auth_attrs_user.html
      request_attrs.html
     }
    }
   }
   csrf_tests=csrf_tests {
    __init__.py
    models.py
    tests.py
   }
   custom_columns_regress=custom_columns_regress {
    __init__.py
    models.py
   }
   custom_managers_regress=custom_managers_regress {
    __init__.py
    models.py
   }
   datastructures=datastructures {
    __init__.py
    models.py
    tests.py
   }
   datatypes=datatypes {
    __init__.py
    models.py
   }
   dateformat=dateformat {
    __init__.py
    models.py
    tests.py
   }
   db_typecasts=db_typecasts {
    __init__.py
    models.py
    tests.py
   }
   decorators=decorators {
    __init__.py
    models.py
    tests.py
   }
   defaultfilters=defaultfilters {
    __init__.py
    models.py
    tests.py
   }
   defer_regress=defer_regress {
    __init__.py
    models.py
    tests.py
   }
   delete_regress=delete_regress {
    __init__.py
    models.py
   }
   dispatch=dispatch {
    __init__.py
    models.py
    tests=tests {
     __init__.py
     test_dispatcher.py
     test_saferef.py
    }
   }
   expressions_regress=expressions_regress {
    __init__.py
    models.py
   }
   extra_regress=extra_regress {
    __init__.py
    models.py
   }
   file_storage=file_storage {
    __init__.py
    models.py
    tests.py
   }
   file_uploads=file_uploads {
    __init__.py
    models.py
    tests.py
    uploadhandler.py
    urls.py
    views.py
   }
   fixtures_regress=fixtures_regress {
    __init__.py
    models.py
    fixtures=fixtures {
     absolute.json
     big-fixture.json
     empty.json
     forward_ref_lookup.json
     model-inheritance.json
     non_natural_1.json
     sequence.json
    }
   }
   forms=forms {
    __init__.py
    error_messages.py
    extra.py
    fields.py
    forms.py
    formsets.py
    media.py
    models.py
    regressions.py
    tests.py
    util.py
    validators.py
    widgets.py
    localflavor=localflavor {
     __init__.py
     ar.py
     at.py
     au.py
     br.py
     ca.py
     ch.py
     cl.py
     cz.py
     de.py
     es.py
     fi.py
     fr.py
     generic.py
     id.py
     ie.py
     is_.py
     it.py
     jp.py
     kw.py
     nl.py
     pl.py
     pt.py
     ro.py
     se.py
     sk.py
     uk.py
     us.py
     uy.py
     za.py
    }
   }
   formwizard=formwizard {
    __init__.py
    forms.py
    models.py
    tests.py
    urls.py
    templates=templates {
     forms=forms {
      wizard.html
     }
    }
   }
   generic_inline_admin=generic_inline_admin {
    __init__.py
    models.py
    tests.py
    urls.py
    fixtures=fixtures {
    }
   }
   generic_relations_regress=generic_relations_regress {
    __init__.py
    models.py
    tests.py
   }
   get_or_create_regress=get_or_create_regress {
    __init__.py
    models.py
   }
   httpwrappers=httpwrappers {
    __init__.py
    models.py
    tests.py
   }
   humanize=humanize {
    __init__.py
    models.py
    tests.py
   }
   i18n=i18n {
    __init__.py
    forms.py
    models.py
    tests.py
    other=other {
     locale=locale {
      de=de {
       LC_MESSAGES=LC_MESSAGES {
       }
      }
     }
    }
    resolution=resolution {
     __init__.py
     models.py
     locale=locale {
      de=de {
       LC_MESSAGES=LC_MESSAGES {
       }
      }
     }
    }
   }
   initial_sql_regress=initial_sql_regress {
    __init__.py
    models.py
    sql=sql {
    }
   }
   inline_formsets=inline_formsets {
    __init__.py
    models.py
    tests.py
   }
   introspection=introspection {
    __init__.py
    models.py
    tests.py
   }
   locale=locale {
    de=de {
     LC_MESSAGES=LC_MESSAGES {
     }
    }
   }
   localflavor=localflavor {
    __init__.py
    forms.py
    models.py
    tests.py
   }
   m2m_regress=m2m_regress {
    __init__.py
    models.py
   }
   m2m_through_regress=m2m_through_regress {
    __init__.py
    models.py
    fixtures=fixtures {
     m2m_through.json
    }
   }
   mail=mail {
    __init__.py
    custombackend.py
    models.py
    tests.py
   }
   makemessages=makemessages {
    __init__.py
    extraction.py
    javascript.js
    models.py
    tests.py
    ignore_dir=ignore_dir {
     ignored.html
    }
    locale=locale {
    }
    templates=templates {
     test.html
    }
   }
   managers_regress=managers_regress {
    __init__.py
    models.py
   }
   many_to_one_regress=many_to_one_regress {
    __init__.py
    models.py
   }
   max_lengths=max_lengths {
    __init__.py
    models.py
    tests.py
   }
   middleware=middleware {
    __init__.py
    models.py
    tests.py
    urls.py
   }
   middleware_exceptions=middleware_exceptions {
    __init__.py
    models.py
    tests.py
    urls.py
    views.py
   }
   model_fields=model_fields {
    __init__.py
    imagefield.py
    models.py
    tests.py
   }
   model_forms_regress=model_forms_regress {
    __init__.py
    models.py
    tests.py
   }
   model_formsets_regress=model_formsets_regress {
    __init__.py
    models.py
    tests.py
   }
   model_inheritance_regress=model_inheritance_regress {
    __init__.py
    models.py
   }
   model_inheritance_select_related=model_inheritance_select_related {
    __init__.py
    models.py
   }
   model_regress=model_regress {
    __init__.py
    models.py
    tests.py
   }
   modeladmin=modeladmin {
    __init__.py
    models.py
   }
   multiple_database=multiple_database {
    __init__.py
    models.py
    tests.py
    fixtures=fixtures {
     multidb-common.json
     multidb.default.json
     multidb.other.json
    }
   }
   null_fk=null_fk {
    __init__.py
    models.py
   }
   null_fk_ordering=null_fk_ordering {
    __init__.py
    models.py
   }
   null_queries=null_queries {
    __init__.py
    models.py
   }
   one_to_one_regress=one_to_one_regress {
    __init__.py
    models.py
    tests.py
   }
   pagination_regress=pagination_regress {
    __init__.py
    models.py
    tests.py
   }
   queries=queries {
    __init__.py
    models.py
    tests.py
   }
   requests=requests {
    __init__.py
    models.py
    tests.py
   }
   reverse_single_related=reverse_single_related {
    __init__.py
    models.py
   }
   select_related_onetoone=select_related_onetoone {
    __init__.py
    models.py
    tests.py
   }
   select_related_regress=select_related_regress {
    __init__.py
    models.py
   }
   serializers_regress=serializers_regress {
    __init__.py
    models.py
    tests.py
   }
   servers=servers {
    __init__.py
    models.py
    tests.py
   }
   settings_tests=settings_tests {
    __init__.py
    models.py
    tests.py
   }
   signals_regress=signals_regress {
    __init__.py
    models.py
   }
   special_headers=special_headers {
    __init__.py
    models.py
    tests.py
    urls.py
    views.py
    fixtures=fixtures {
    }
    templates=templates {
     special_headers=special_headers {
      article_detail.html
     }
    }
   }
   string_lookup=string_lookup {
    __init__.py
    models.py
   }
   syndication=syndication {
    __init__.py
    feeds.py
    models.py
    tests.py
    urls.py
    fixtures=fixtures {
     feeddata.json
    }
    templates=templates {
     syndication=syndication {
      description.html
      title.html
     }
    }
   }
   templates=templates {
    __init__.py
    context.py
    custom.py
    filters.py
    loaders.py
    models.py
    parser.py
    smartif.py
    tests.py
    unicode.py
    urls.py
    views.py
    templatetags=templatetags {
     __init__.py
     custom.py
    }
   }
   test_client_regress=test_client_regress {
    __init__.py
    models.py
    urls.py
    views.py
    bad_templates=bad_templates {
     404.html
    }
    fixtures=fixtures {
     testdata.json
    }
    templates=templates {
     unicode.html
    }
   }
   test_runner=test_runner {
    __init__.py
    models.py
    tests.py
   }
   test_utils=test_utils {
    __init__.py
    models.py
    tests.py
   }
   text=text {
    __init__.py
    models.py
    tests.py
   }
   urlpatterns_reverse=urlpatterns_reverse {
    __init__.py
    extra_urls.py
    included_namespace_urls.py
    included_urls.py
    included_urls2.py
    middleware.py
    models.py
    namespace_urls.py
    no_urls.py
    tests.py
    urlconf_inner.py
    urlconf_outer.py
    urls.py
    urls_error_handlers.py
    urls_error_handlers_callables.py
    views.py
   }
   utils=utils {
    __init__.py
    datastructures.py
    dateformat.py
    datetime_safe.py
    decorators.py
    feedgenerator.py
    functional.py
    itercompat.py
    models.py
    termcolors.py
    tests.py
    timesince.py
    tzinfo.py
    urls.py
    views.py
   }
   views=views {
    __init__.py
    models.py
    urls.py
    views.py
    fixtures=fixtures {
     testdata.json
    }
    locale=locale {
     en=en {
      LC_MESSAGES=LC_MESSAGES {
      }
     }
     es=es {
      LC_MESSAGES=LC_MESSAGES {
      }
     }
     fr=fr {
      LC_MESSAGES=LC_MESSAGES {
      }
     }
     ru=ru {
      LC_MESSAGES=LC_MESSAGES {
      }
     }
    }
    media=media {
     file.txt
    }
    tests=tests {
     __init__.py
     debug.py
     defaults.py
     i18n.py
     specials.py
     static.py
     generic=generic {
      __init__.py
      create_update.py
      date_based.py
     }
    }
   }
  }
  templates=templates {
   404.html
   500.html
   base.html
   extended.html
   form_view.html
   login.html
   comments=comments {
    comment_notification_email.txt
   }
   custom_admin=custom_admin {
    add_form.html
    change_form.html
    change_list.html
    delete_confirmation.html
    index.html
    login.html
    logout.html
    object_history.html
    password_change_done.html
    password_change_form.html
   }
   views=views {
    article_archive_day.html
    article_archive_month.html
    article_confirm_delete.html
    article_detail.html
    article_form.html
    datearticle_archive_month.html
    urlarticle_detail.html
    urlarticle_form.html
   }
  }
 }
}

cbox=~/code/cbox {
 CMakeLists.txt
 cmake_purge.py
 bash=bash {
  userful_stuff.txt
 }
 build_tools=build_tools {
  waf=waf {
   hirarcy=hirarcy {
    app1.c
    app2.c
    app3.c
    waf
    wscript
    lib=lib {
     mylib.c
     mylib.h
     mylib_ext.c
     mylib_ext.h
     wscript
    }
   }
  }
 }
 c=c {
  CMakeLists.txt
  bit=bit {
   CMakeLists.txt
   examples.c
  }
  cmake_test1=cmake_test1 {
   CMakeLists.txt
   LICENSE
   config.h.in
   hello1.c
   hello2.c
   main1.c
  }
  dbus=dbus {
   GnomePowerManager=GnomePowerManager {
    main.c
   }
   HelloWorld=HelloWorld {
    Makefile
    helloworld-dbus.xml
    helloworld.c
    helloworld.h
    main.c
   }
   ListNames=ListNames {
    main.c
   }
   Signal1=Signal1 {
    main.c
   }
  }
  flexbison=flexbison {
   calc=calc {
    calc.l
    calc.y
   }
  }
  freetype=freetype {
   ft_info=ft_info {
    Makefile
    Test.ttf
    fontinfo.cpp
   }
  }
  gconf=gconf {
   simple.c
  }
  glib=glib {
   CMakeLists.txt
   gchecksum1.c
   ghash.c
   glist.c
   glog.c
   gmiscfunc1.c
   goption1.c
   goption2.c
   grandom1.c
   gregex1.c
   gscanner1.c
   gslist1.c
   gthread.c
   gtimer.c
   mainloop1.c
   mainloop2.c
   mainloop3.c
   malloc.c
   fm=fm {
    fm-apple.c
    fm-apple.h
    fm-fruit.c
    fm-fruit.h
    main.c
   }
   fruity=fruity {
    Makefile
    fruity-fruit.c
    fruity-fruit.h
    fruity-module-manager.c
    fruity-module-manager.h
    fruity-module.c
    fruity-module.h
    main.c
    modules=modules {
     Makefile
     fruity-fruit-apple.c
     fruity-fruit-orange.c
    }
   }
   gmodule=gmodule {
    main.c
    plugin.c
   }
   gobject=gobject {
    gobject1.c
    gobject2.c
   }
   iochannel=iochannel {
    file1.lst
    read1.c
   }
   plugin1=plugin1 {
    Makefile
    main.c
    plugin.c
    plugin.h
    testplugin.c
    testplugin.h
   }
   say_hello=say_hello {
    main.c
    say_hello.c
    say_hello.h
   }
  }
  gstreamer=gstreamer {
   oggplayer.cpp
   simple.cpp
   init=init {
    main.c
   }
   oggplayer=oggplayer {
    main.c
   }
  }
  gtk=gtk {
   hello.c
   glade1=glade1 {
    choosers-ui.glade
    helloworld-ui.glade
    main.c
   }
   tablepacking=tablepacking {
    main.c
   }
  }
  libxml=libxml {
  }
  libxml2=libxml2 {
   Makefile
   find_element.c
   parse.c
   rng.c
   test.rng
   test.xml
   xpath.c
  }
  multiprogramming=multiprogramming {
  }
  sockets=sockets {
   daytime.c
   echosrv.c
   lookup.c
  }
  tests=tests {
   CMakeLists.txt
   function_pointers.c
   multiarray.c
   random.c
   sscanf_examples.c
   stat.c
   strtok.c
  }
 }
 csh=csh {
  tests.csh
 }
 csharp=csharp {
  hello.cs
  simple.cs
  variables.cs
  gtk-sharp=gtk-sharp {
   hello.cs
  }
 }
 css=css {
  float.css
  float.html
  form.css
  form.html
  logo.css
  logo.html
  multicolumn.css
  multicolumn.html
  selectors.css
  selectors.html
  simple.css
  simple.html
 }
 cxx=cxx {
  CMakeLists.txt
  Tokenizer.cpp
  algoritms=algoritms {
   bintree=bintree {
   }
   tree=tree {
    CMakeLists.txt
    bintree.h
    bintree_test.cpp
    bintree_unittests.cpp
    btree.h
    unittest_main.cpp
   }
  }
  boost=boost {
   any=any {
    any1.cpp
   }
   bind=bind {
    bind1.cpp
   }
   function=function {
    function1.cpp
   }
   lambda=lambda {
    lambda1.cpp
   }
   lexical_cast=lexical_cast {
    lexical_cast1.cpp
   }
   signals=signals {
    signals1.cpp
   }
  }
  directx=directx {
   dsound=dsound {
    1main.cpp
    glwin.h
    main.cpp
   }
   sound_lib=sound_lib {
    FileStream.cpp
    FileStream.h
    audiodevice.cpp
    audiodevice.h
    audioprovider.cpp
    audioprovider.h
    glwin.h
    in_ogg.cpp
    in_ogg.h
    in_raw.cpp
    in_raw.h
    main.cpp
    out.tag
    out_dsound8.cpp
    out_dsound8.h
    out_waveout.cpp
    out_waveout.h
    sound_lib.sln
    sound_lib.suo
    sound_lib.vcproj
   }
   testd3d8=testd3d8 {
    blending-main.cpp
    donut.h
    eMath.cpp
    eMath.h
    eWindow.cpp
    eWindow.h
    fog-main.cpp
    light-main.cpp
    main-triangle.cpp
    main.cpp
    multitexture-main.cpp
    obj2fvf.cpp
    object-main.cpp
    texture-main.cpp
   }
  }
  kde4=kde4 {
   helloworld=helloworld {
    CMakeLists.txt
    main.cpp
   }
   kcmdlineargs1=kcmdlineargs1 {
    CMakeLists.txt
    main.cpp
   }
   plasmoid1=plasmoid1 {
    CMakeLists.txt
    README
    plasma-applet-test1.desktop
    test1.cpp
    test1.h
   }
   simpleedit=simpleedit {
    CMakeLists.txt
    main.cpp
    mainwindow.cpp
    mainwindow.h
   }
   simpleedit2=simpleedit2 {
    CMakeLists.txt
    main.cpp
    mainwindow.cpp
    mainwindow.h
    simpleedit2ui.rc
   }
  }
  maya=maya {
   MayaConsoleExporter1=MayaConsoleExporter1 {
    CModel.cpp
    CModel.h
    MayaConsoleExporter1.sln
    MayaConsoleExporter1.suo
    MayaConsoleExporter1.vcproj
    main.cpp
   }
   MayaSimple2=MayaSimple2 {
    Material.cpp
    Material.h
    MayaSimple2.sln
    MayaSimple2.suo
    MayaSimple2.vcproj
    Model.cpp
    Model.h
    main.cpp
   }
   cLoader1=cLoader1 {
    Makefile
    main.cpp
   }
   pBasicTxtExporter=pBasicTxtExporter {
    Makefile
    main.cpp
    mp_export.cpp
    mp_export.h
   }
  }
  package=package {
   eyplib=eyplib {
    clean.bat
    eyp.h
    files.txt
    impl_eyppack.cpp
    impl_eyppack.h
    impl_eypunpack.cpp
    impl_eypunpack.h
    impl_zlib.cpp
    impl_zlib.h
    makep.bat
    p_make.bat
    p_test.cpp
    packer.cpp
    packtool.cpp
    readmem.cpp
    u_make.bat
    u_test.cpp
   }
   package=package {
    data.xml
    file.cpp
    file.h
    main.cpp
    make.bat
    package.sln
    package.suo
    package.vcproj
    pak.cpp
    pak.h
    test1.cpp
    textures.xml
    tinyxml.cpp
    tinyxml.h
    tinyxmlerror.cpp
    tinyxmlparser.cpp
   }
   tinyxml=tinyxml {
    demo.xml
    main.cpp
    tinyxml.cpp
    tinyxml.h
    tinyxmlerror.cpp
    tinyxmlparser.cpp
   }
  }
  qt4=qt4 {
   GLWidget1=GLWidget1 {
   }
   IOstuff=IOstuff {
   }
   MainWindow1=MainWindow1 {
   }
   MainWindow2=MainWindow2 {
   }
   MyWidget1=MyWidget1 {
   }
   MyWidget2=MyWidget2 {
   }
   MyWidget3=MyWidget3 {
   }
   MyWidget4=MyWidget4 {
   }
   Painter1=Painter1 {
   }
   TestWorkspace=TestWorkspace {
   }
   ViewFilesMDI=ViewFilesMDI {
   }
   age_layout=age_layout {
   }
   draganddrop1=draganddrop1 {
   }
   find_qdialog=find_qdialog {
    src=src {
    }
   }
   glwidget1=glwidget1 {
   }
   gotodialog=gotodialog {
    src=src {
    }
   }
   gui=gui {
    age_layout=age_layout {
     Makefile
     age_layout.pro
     main.cc
    }
    draganddrop1=draganddrop1 {
     Makefile
     draganddrop1.pro
     main.cc
     mainwindow.cc
     mainwindow.h
    }
    find_qdialog=find_qdialog {
     wscript
     src=src {
      finddialog.cpp
      finddialog.h
      main.cpp
      wscript
     }
    }
    glwidget1=glwidget1 {
     CMakeLists.txt
     glbeholder.cpp
     glbeholder.h
     glwidget.cpp
     glwidget.h
     main.cpp
    }
    gotodialog=gotodialog {
     CMakeLists.txt
     gotocelldialog.cpp
     gotocelldialog.h
     gotocelldialog.ui
     main.cpp
    }
    hello=hello {
     wscript
     src=src {
      main.cc
      wscript
     }
    }
    hello_button=hello_button {
     Makefile
     hello_button.pro
     main.cc
    }
    helloworld=helloworld {
     HelloWorld.pro
     main.cc
    }
    helloworld2=helloworld2 {
     HelloWorld.pro
     main.cc
    }
    helloworld3=helloworld3 {
     HelloWorld3.pro
     main.cc
    }
    iostuff=iostuff {
     IOstuff.pro
     main.cc
     widget.cc
     widget.h
    }
    layouts=layouts {
     Makefile
     layouts.pro
     main.cc
    }
    mainwindow1=mainwindow1 {
     Makefile
     exit.png
     main.cc
     mainwindow.cc
     mainwindow.h
     mainwindow1.pro
     new.png
     open.png
     save.png
     saveas.png
    }
    mainwindow2=mainwindow2 {
     MainWindow1.pro
     main.cc
     window.cc
     window.h
    }
    mainwindow3=mainwindow3 {
     MainWindow2.pro
     main.cc
     mainwindow.cc
     mainwindow.h
    }
    mywidget1=mywidget1 {
     MyWidget1.pro
     main.cc
    }
    mywidget2=mywidget2 {
     MyWidget2.pro
     main.cc
    }
    mywidget3=mywidget3 {
     MyWidget3.pro
     main.cc
    }
    mywidget4=mywidget4 {
     MyWidget4.pro
     main.cc
     widget.cc
     widget.h
    }
    painter1=painter1 {
     CMakeLists.txt
     custombutton.cc
     custombutton.h
     main.cc
     paintwidget.cc
     paintwidget.h
    }
    systray1=systray1 {
     main.cpp
     systray1.pro
     window.cpp
     window.h
    }
    tableview1=tableview1 {
     Makefile
     main.cc
     tableview1.pro
    }
    tabwidget1=tabwidget1 {
     main.cpp
     tabdialog.cpp
     tabdialog.h
     tabwidget1.pro
    }
    testworkspace=testworkspace {
     TestWorkspace.pro
     main.cc
     testworkspace.cpp
     testworkspace.h
    }
    tooltip1=tooltip1 {
     main.cpp
     tooltip1.pro
    }
    treeview1=treeview1 {
     Makefile
     main.cc
     treeview1.pro
    }
    viewfilesmdi=viewfilesmdi {
     ViewFilesMDI.pro
     main.cc
     mainwindow.cc
     mainwindow.h
     mdichild.cc
     mdichild.h
    }
   }
   hello=hello {
    src=src {
    }
   }
   hello_button=hello_button {
   }
   helloworld=helloworld {
   }
   HelloWorld=HelloWorld {
   }
   HelloWorld2=HelloWorld2 {
   }
   helloworld2=helloworld2 {
   }
   helloworld3=helloworld3 {
   }
   HelloWorld3=HelloWorld3 {
   }
   iostuff=iostuff {
   }
   layouts=layouts {
   }
   linguist=linguist {
    linguist1=linguist1 {
     linguist1.pro
     linguist1_no.qm
     linguist1_no.ts
     main.cpp
    }
   }
   linguist1=linguist1 {
   }
   mainwindow1=mainwindow1 {
   }
   mainwindow2=mainwindow2 {
   }
   mainwindow3=mainwindow3 {
   }
   mywidget1=mywidget1 {
   }
   mywidget2=mywidget2 {
   }
   mywidget3=mywidget3 {
   }
   mywidget4=mywidget4 {
   }
   nongui=nongui {
    datetime=datetime {
     datetime.pro
     main.cpp
    }
    generic_containers=generic_containers {
     generic_containers.pro
     main.cpp
    }
    plugin1=plugin1 {
     main.cpp
     plugin1.pro
     talkinterface.h
     plugins=plugins {
      plugins.pro
      appleplugin=appleplugin {
       appleplugin.cpp
       appleplugin.h
       appleplugin.pro
      }
     }
    }
    qtscript1=qtscript1 {
     Makefile
     main.cc
     qtscript1.pro
    }
    timer=timer {
     main.cpp
     timeis.cpp
     timeis.h
     timer.pro
    }
   }
   painter1=painter1 {
   }
   plugin1=plugin1 {
    plugins=plugins {
     appleplugin=appleplugin {
     }
    }
   }
   qtscript1=qtscript1 {
   }
   styles=styles {
    simple1=simple1 {
     main.cpp
     simple1.pro
    }
   }
   systray1=systray1 {
   }
   tableview1=tableview1 {
   }
   tabwidget1=tabwidget1 {
   }
   testing=testing {
    qtest1=qtest1 {
    }
    qtest2=qtest2 {
     CMakeLists.txt
     test_qstring.cpp
     test_qstring.h
    }
   }
   testworkspace=testworkspace {
   }
   tooltip1=tooltip1 {
   }
   treeview1=treeview1 {
   }
   viewfilesmdi=viewfilesmdi {
   }
  }
  stl=stl {
   algo1.cpp
   algo2.cpp
   algorithm.cpp
   deque1.cpp
   foreach1.cpp
   istr1.cpp
   istr2.cpp
   list1.cpp
   numeric.cpp
   pair.cpp
   reverse1.cpp
   rtti.cpp
   transform1.cpp
   vectoritr.cpp
   algorithms=algorithms {
    copy_backward1.cpp
    for_each1.cpp
   }
   strings=strings {
    string1.cpp
   }
  }
  templates=templates {
   CMakeLists.txt
   functions.cpp
   member.cpp
   member.h
  }
  tests=tests {
   CMakeLists.txt
   abstract_class.cpp
   class_templates.cpp
   class_templates.h
   classes.cpp
   classes.h
   functions.cpp
   string.cpp
   vector.cpp
   vector_adv.cpp
   vector_adv.h
  }
  opencl=opencl {
   CMakeLists.txt
   Doxyfile
   Session.vim
   cl.hpp
   cmake-include=cmake-include {
    FindOpenCL.cmake
    cl_to_header.py
    opencl.cmake
   }
   simple=simple {
    CMakeLists.txt
    tst.cpp
    tst_fileinclude.cl
    tst_fileinclude.cpp
   }
   sum=sum {
    CMakeLists.txt
    sum.cc
    sum2d.cc
    sum2d_kernel.cl
   }
   inout=inout {
    CMakeLists.txt
    inout.cc
    inout_kernel.cl
   }
  }
 }
 docbook=docbook {
  Makefile
  test1.html
  test1.xml
  docbook5=docbook5 {
   docbook.rnc
   docbook.rng
   docbook.xsd
  }
  tdg5=tdg5 {
   en=en {
    html=html {
     _any.html
     _any.mml.html
     _any.svg.html
     _emphasis.html
     _phrase.html
     abbrev.html
     abstract.html
     accel.html
     acknowledgements.html
     acronym.html
     address.html
     affiliation.html
     alt.html
     anchor.html
     annotation.html
     answer.html
     apg.html
     appa.html
     appc.html
     appd.html
     appe.html
     appendix.html
     appf.html
     appi.html
     application.html
     arc.html
     area.html
     area.inareaset.html
     areaset.html
     areaspec.html
     arg.html
     article.html
     artpagenums.html
     attribution.html
     audiodata.html
     audioobject.html
     author.html
     authorgroup.html
     authorinitials.html
     bibliocoverage.html
     bibliodiv.html
     biblioentry.html
     bibliography.html
     biblioid.html
     bibliolist.html
     bibliomisc.html
     bibliomixed.html
     bibliomset.html
     biblioref.html
     bibliorelation.html
     biblioset.html
     bibliosource.html
     blockquote.html
     book.html
     bridgehead.html
     callout.html
     calloutlist.html
     cals.entrytbl.tbody.html
     cals.entrytbl.thead.html
     cals.informaltable.html
     cals.table.html
     cals.tbody.html
     cals.tfoot.html
     cals.thead.html
     caption.html
     caution.html
     ch00.html
     ch01.html
     ch02.html
     ch03.html
     ch04.html
     ch05.html
     chapter.html
     citation.html
     citebiblioid.html
     citerefentry.html
     citetitle.html
     city.html
     classname.html
     classsynopsis.html
     classsynopsisinfo.html
     cmdsynopsis.html
     co.html
     co01.html
     code.html
     collab.html
     colophon.html
     colspec.html
     command.html
     computeroutput.html
     confdates.html
     confgroup.html
     confnum.html
     confsponsor.html
     conftitle.html
     constant.html
     constraint.html
     constraintdef.html
     constructorsynopsis.html
     contractnum.html
     contractsponsor.html
     contrib.html
     copyright.html
     coref.html
     country.html
     cover.html
     database.html
     date.html
     dbcpyright.html
     dbgloss.html
     dedication.html
     defguide.css
     destructorsynopsis.html
     docbook.html
     edition.html
     editor.html
     email.html
     emphasis.html
     entry.html
     entrytbl.html
     entrytbl.row.html
     envar.html
     epigraph.html
     equation.html
     errorcode.html
     errorname.html
     errortext.html
     errortype.html
     example.html
     exceptionname.html
     extendedlink.html
     fax.html
     fieldsynopsis.html
     figure.html
     filename.html
     firstname.html
     firstterm.html
     footnote.html
     footnoteref.html
     foreignphrase.html
     formalpara.html
     funcdef.html
     funcparams.html
     funcprototype.html
     funcsynopsis.html
     funcsynopsisinfo.html
     function.html
     glossary.html
     glossdef.html
     glossdiv.html
     glossentry.html
     glosslist.html
     glosssee.html
     glossseealso.html
     glossterm.html
     group.html
     guibutton.html
     guiicon.html
     guilabel.html
     guimenu.html
     guimenuitem.html
     guisubmenu.html
     hardware.html
     holder.html
     honorific.html
     html.button.html
     html.caption.html
     html.col.html
     html.colgroup.html
     html.fieldset.html
     html.form.html
     html.informaltable.html
     html.input.html
     html.label.html
     html.legend.html
     html.option.html
     html.select.html
     html.table.html
     html.tbody.html
     html.td.html
     html.textarea.html
     html.tfoot.html
     html.th.html
     html.thead.html
     html.tr.html
     imagedata.html
     imagedata.mathml.html
     imagedata.svg.html
     imageobject.html
     imageobjectco.html
     important.html
     index.html
     indexdiv.html
     indexentry.html
     indexterm.endofrange.html
     indexterm.singular.html
     indexterm.startofrange.html
     info.html
     informalequation.html
     informalexample.html
     informalfigure.html
     initializer.html
     inlineequation.html
     inlinemediaobject.html
     interfacename.html
     issuenum.html
     itemizedlist.html
     itermset.html
     ix01.html
     jobtitle.html
     keycap.html
     keycode.html
     keycombo.html
     keysym.html
     keyword.html
     keywordset.html
     label.html
     ld-d0e116477.html
     legalnotice.html
     lhs.html
     lineage.html
     lineannotation.html
     link.html
     listitem.html
     literal.html
     literallayout.html
     locator.html
     manvolnum.html
     markup.html
     mathphrase.html
     mediaobject.html
     member.html
     menuchoice.html
     methodname.html
     methodparam.html
     methodsynopsis.html
     modifier.html
     mousebutton.html
     msg.html
     msgaud.html
     msgentry.html
     msgexplan.html
     msginfo.html
     msglevel.html
     msgmain.html
     msgorig.html
     msgrel.html
     msgset.html
     msgsub.html
     msgtext.html
     nonterminal.html
     note.html
     olink.html
     ooclass.html
     ooexception.html
     oointerface.html
     option.html
     optional.html
     orderedlist.html
     org.html
     orgdiv.html
     orgname.html
     otheraddr.html
     othercredit.html
     othername.html
     package.html
     pagenums.html
     para.html
     paramdef.html
     parameter.html
     part.html
     part1.html
     part3.html
     partintro.html
     person.html
     personblurb.html
     personname.html
     phone.html
     phrase.html
     pob.html
     postcode.html
     preface.html
     primary.html
     primaryie.html
     printhistory.html
     procedure.html
     production.html
     productionrecap.html
     productionset.html
     productname.html
     productnumber.html
     programlisting.html
     programlistingco.html
     prompt.html
     property.html
     pt02.html
     pubdate.html
     publisher.html
     publishername.html
     qandadiv.html
     qandaentry.html
     qandaset.html
     question.html
     quickref.html
     quote.html
     ref-elements.html
     refclass.html
     refdescriptor.html
     refentry.html
     refentrytitle.html
     reference.html
     refmeta.html
     refmiscinfo.html
     refname.html
     refnamediv.html
     refpurpose.html
     refsect1.html
     refsect2.html
     refsect3.html
     refsection.html
     refsynopsisdiv.html
     releaseinfo.html
     remark.html
     replaceable.html
     returnvalue.html
     revdescription.html
     revhistory.html
     revision.html
     revnumber.html
     revremark.html
     rhs.html
     row.html
     sbr.html
     screen.html
     screenco.html
     screenshot.html
     secondary.html
     secondaryie.html
     sect1.html
     sect2.html
     sect3.html
     sect4.html
     sect5.html
     section.html
     see.html
     seealso.html
     seealsoie.html
     seeie.html
     seg.html
     seglistitem.html
     segmentedlist.html
     segtitle.html
     seriesvolnums.html
     set.html
     setindex.html
     shortaffil.html
     shortcut.html
     sidebar.html
     simpara.html
     simplelist.html
     simplemsgentry.html
     simplesect.html
     spanspec.html
     state.html
     step.html
     stepalternatives.html
     street.html
     subject.html
     subjectset.html
     subjectterm.html
     subscript.html
     substeps.html
     subtitle.html
     superscript.html
     surname.html
     symbol.html
     synopfragment.html
     synopfragmentref.html
     synopsis.html
     systemitem.html
     tag.html
     task.html
     taskprerequisites.html
     taskrelated.html
     tasksummary.html
     term.html
     termdef.html
     tertiary.html
     tertiaryie.html
     textdata.html
     textobject.html
     tgroup.html
     tip.html
     title.html
     titleabbrev.html
     titleforbidden.info.html
     titleonly.info.html
     titleonlyreq.info.html
     titlereq.info.html
     toc.html
     tocdiv.html
     tocentry.html
     token.html
     trademark.html
     type.html
     uri.html
     userinput.html
     varargs.html
     variablelist.html
     varlistentry.html
     varname.html
     videodata.html
     videoobject.html
     void.html
     volumenum.html
     warning.html
     wordasword.html
     xref.html
     year.html
     figures=figures {
      cover.png
      duck-small.png
      eiffeltower.png
      emc2.png
      epi10.png
      fermat.png
      graphic-attr-1.png
      graphic-attr-2.png
      graphic-attr-3.png
      graphic-attr-4.png
      graphic-attr-5.png
      graphic-attr-6.png
      graphic-attr-7.png
      legend.png
      nav-home.png
      nav-next.png
      nav-prev.png
      nav-up.png
      nav-xnext.png
      nav-xprev.png
      nav-xup.png
      officemap.png
      pythag.png
      rev_5.0.png
      stamp200x128.png
      stamp200x256.png
      stamp400x256.png
      callouts=callouts {
       1.png
       10.png
       2.png
       3.png
       4.png
       5.png
       6.png
       7.png
       8.png
       9.png
      }
     }
    }
   }
  }
 }
 fortran=fortran {
  hello=hello {
   CMakeLists.txt
   SConstruct
   hellofunc.f90
   hellomod.f90
   hellomod_app.f90
   helloworld.f90
  }
 }
 gas=gas {
  cmdline.s
  cpuid.s
  cpuid2.s
  endian1.s
  loop.s
  adder=adder {
   addl.s
   test-addl.c
  }
  arrayadd=arrayadd {
   arrayadd.s
   test-arrayadd.c
  }
  call-c-function=call-c-function {
   Makefile
   func.c
   main.s
  }
  div10=div10 {
   div10.s
   test-div10.c
  }
  function=function {
   Makefile
   function.i
  }
  heap=heap {
   Makefile
   heap.s
   heaptest.c
   linkedlist.s
  }
  increment=increment {
   incl.s
   test-incl.c
  }
  list=list {
   list.s
   test-list.c
  }
  mstrlen=mstrlen {
   mstrlen.s
   test-mstrlen.c
  }
  return-tre=return-tre {
   test-tre.c
   tre.s
  }
  simple=simple {
   Makefile
   simple.s
  }
  syscall=syscall {
   Makefile
   syscall.s
  }
 }
 java=java {
  1.5_generics=1.5_generics {
   Test1.java
  }
  algo=algo {
   DifferentFibs.java
   FindMaxDivideAndConquer.java
   Gcd.java
   GraphTraversal.java
   InfixToPrefix.java
   LinkedList.java
   PrefixTest.java
   SortExamples1.java
   TreeTraversal.java
   calc=calc {
    Parser.java
    Scanner.java
    Test.java
    Token.java
   }
  }
  applets=applets {
   Gui.html
   Gui.java
   HelloWorld.html
   HelloWorld.java
  }
  junit=junit {
   Makefile
   build.xml
   junit_tutorial.xml
   src=src {
    CharStack.java
    Math.java
   }
   testsuite=testsuite {
    TestCharStack.java
    TestMath.java
    TestSuite.java
   }
  }
  net=net {
   URLStreams.java
  }
  swing=swing {
   DialogTest.java
   Painting.java
   PressButton.java
   SimpleWindow.java
   SimpleWindow2.java
   WindowTest1.java
  }
  tests=tests {
   GenericsAndArrays.java
   InterfaceTest.java
   RegEx.java
   ScannerTest.java
  }
  thread=thread {
   Interrupt.java
   Join.java
   WaitNotify.java
  }
  web=web {
   servlettest=servlettest {
    build.properties
    build.xml
    docs=docs {
    }
    src=src {
     net=net {
      espenak=espenak {
       stuff=stuff {
        HelloWorld.java
       }
      }
     }
    }
    web=web {
     index.html
     META-INF=META-INF {
     }
     WEB-INF=WEB-INF {
      web.xml
     }
     images=images {
      home.svg
     }
    }
   }
  }
 }
 latex=latex {
  Makefile
  internationalization.tex
  multifile=multifile {
   main.tex
   part1.tex
   part2.tex
  }
 }
 opengl=opengl {
  misc1.cpp
  3ds-loader=3ds-loader {
   Makefile
   chamfer.3ds
   hose.3ds
   jelyfish.3ds
   lights.3ds
   loader.cpp
   mu2h.3ds
   objects.3ds
   torus.3ds
   info=info {
    3DSINFO.TXT
    3DS_d.rtf
    3ds.rtf
    SPLINES.TXT
    c3ds=c3ds {
     c3ds_v05=c3ds_v05 {
      ReadMe.txt
      msvc=msvc {
       C3DModel.h
       Framer.dsp
       MATRIX.h
       Mainframe.cpp
       VECTOR.h
       c3ds.h
       wndframe.h
      }
     }
     c3ds_v07=c3ds_v07 {
      gnu-linux=gnu-linux {
       c3ds-0.7=c3ds-0.7 {
        AUTHORS
        COPYING
        ChangeLog
        INSTALL
        Makefile.am
        Makefile.in
        NEWS
        README
        TODO
        acconfig.h
        acinclude.m4
        aclocal.m4
        config.guess
        config.h.in
        config.sub
        configure
        configure.in
        depcomp
        install-sh
        ltmain.sh
        missing
        mkinstalldirs
        src=src {
         3DCamera.cc
         3DCamera.h
         3DFace.cc
         3DFace.h
         3DModel.cc
         3DModel.h
         3DObject.cc
         3DObject.h
         3dsFileFormat.cc
         3dsFileFormat.h
         3dsFileLoader.cc
         3dsFileLoader.h
         AppFrame.cc
         AppFrame.h
         MATRIX.cc
         MATRIX.h
         Makefile.am
         Makefile.in
         VECTOR.cc
         VECTOR.h
         ViewControl.cc
         ViewControl.h
         Window.cc
         Window.h
         main.cc
         tpot.3ds
        }
       }
      }
      win32=win32 {
       Demo=Demo {
        tpot.3ds
       }
       c3ds07=c3ds07 {
        3DCamera.cpp
        3DCamera.h
        3DFace.cpp
        3DFace.h
        3DModel.cpp
        3DModel.h
        3DObject.cpp
        3DObject.h
        3dsFileFormat.cpp
        3dsFileFormat.h
        3dsFileLoader.cpp
        3dsFileLoader.h
        AppFrame.cpp
        AppFrame.h
        ViewControl.cpp
        ViewControl.h
        Window.cpp
        Window.h
        c3ds07.dsp
        main.cpp
        matrix.cpp
        matrix.h
        tpot.3ds
        vector.cpp
        vector.h
       }
      }
     }
     docs=docs {
      english.pdf
      italian.pdf
      latex=latex {
       class1.h
       english.tex
       italian.tex
      }
     }
    }
   }
   k3d=k3d {
    3ds.cpp
    3ds.h
    chamfer.3ds
    chamfer.k3d
    decode_tga.h
    file.cpp
    file.h
    glwin.cpp
    glwin.h
    hose.3ds
    jelyfish.3ds
    k3d.cpp
    k3d.h
    lights.3ds
    main.cpp
    make.bat
    mu2h.3ds
    mu2h.k3d
    objects.3ds
    objects.k3d
    tex000.tga
    timer.h
    torus.3ds
    torus.k3d
    vec3.h
    view.cpp
   }
  }
  ge=ge {
   Makefile
   glapp.cpp
   glapp.h
   main.cpp
   pbuffer.cpp
   pbuffer.h
  }
  glt=glt {
   glt.sln
   glt.suo
   common=common {
    ReadMe.txt
    common.vcproj
    glt.cpp
    glt.h
    glt.lib
    gltd.lib
    image.cpp
    image.h
    mesh.cpp
    mesh.h
    texture.cpp
    texture.h
    Debug=Debug {
     BuildLog.htm
     glt.obj
     image.obj
     mesh.obj
     texture.obj
     vc70.idb
    }
   }
   testReflection=testReflection {
    main.cpp
    testReflection.vcproj
   }
   testShadingLanguage=testShadingLanguage {
    Shader.fs
    Shader.vs
    main.cpp
    testShadingLanguage.vcproj
   }
   testShadows=testShadows {
    main.cpp
    testShadows.vcproj
   }
   testTexture=testTexture {
    Shader.fs
    Shader.vs
    main.cpp
    testTexture.vcproj
    texture2.jpg
    Debug=Debug {
     BuildLog.htm
     main.obj
     testTexture.ilk
     vc70.idb
    }
   }
   Testing=Testing {
    main.cpp
   }
  }
  glut=glut {
   object+rotate=object+rotate {
    Makefile
    main.cpp
   }
   object+rotate+divshader=object+rotate+divshader {
    Makefile
    gmon.out
    main.cpp
    shader.fs
    shader.vs
   }
   object+rotate+light_per_vertex=object+rotate+light_per_vertex {
    Makefile
    main.cpp
    shader.fs
    shader.vs
   }
   object+rotate+texture=object+rotate+texture {
    Makefile
    main.cpp
    texture.tga
   }
   object+rotate+types=object+rotate+types {
    EMatrix.h
    EVector.h
    Makefile
    main.cpp
    ml.cpp
    ml.h
   }
  }
  lwo-loader=lwo-loader {
   info=info {
    lightwav.zip
    lw-info.zip
    lwlo.zip
   }
   lwo2=lwo2 {
    decode_png.h
    donut.lwo
    glwin.cpp
    glwin.h
    glwin.obj
    huset.lwo
    lwo2.cpp
    lwo2.h
    lwo2.obj
    lwo2_surface.h
    main.cpp
    main.obj
    make.bat
    pak5_rck6_lt1.PNG
    psy.bmp
    resource.h
    rom.lwo
    romrom.lwo
    setup.aps
    setup.rc
    setup.res
    space.lwo
    vec3.h
   }
  }
  rendermonkey=rendermonkey {
   color-inversion.rfx
   diffuse+specular.rfx
   diffuse.rfx
   gray.rfx
   sepia.rfx
  }
  shaderasm=shaderasm {
   Shader.fp
   Shader.vp
   Test1.cpp
  }
  shaderglsl=shaderglsl {
   Shader.fs
   Shader.vs
   Test1.cpp
  }
  simp1=simp1 {
   Makefile
   glshader.cpp
   glshader.h
   glwindow.cpp
   glwindow.h
   main.cpp
   shader.fs
   shader.vs
  }
  testing=testing {
   Makefile
   main
   main.cpp
   test.cc
  }
  win32gl=win32gl {
   PBuffer.cpp
   PBuffer.h
   main.cpp
  }
 }
 perl=perl {
  arrays.pl
  arrays_and_lists.pl
  date.pl
  dbi1.pl
  directories.pl
  expression_modifiers.pl
  filehandle.pl
  hashes.pl
  if_control.pl
  input.pl
  lists.pl
  references.pl
  regexp1.pl
  regexp2.pl
  split_and_join.pl
  subroutines.pl
  subroutines2.pl
  undefined_var.pl
  variables.pl
  while_control.pl
 }
 prolog=prolog {
  family.pl
  first.pl
 }
 python=python {
  bzr=bzr {
   createrepo.py
   find_branches.py
   install-bazaar.sh
   inventory.py
   repoinfo.py
   test.py
  }
  cgi=cgi {
   pythoninfo.cgi
  }
  configparser=configparser {
   read1.cfg
   read1.py
   write1.py
  }
  dbus=dbus {
   avahi-get-fqdn.py
   echo-service.py
   listen-for-devices.py
  }
  distutils=distutils {
   hello=hello {
    hello.py
    setup.py
    test.py
   }
  }
  email=email {
   sendmail.py
  }
  extend=extend {
   advanced_classes=advanced_classes {
    Makefile
    power_user_obj.c
    power_user_obj.h
    setup.py
    tests.py
    user_module.c
    user_obj.c
    user_obj.h
   }
   classes=classes {
    person.c
    person1.h
    person2.h
    setup.py
    test.py
    test2.py
   }
   cython=cython {
    primes.c
    primes.pyx
    spam.c
    spam.pyx
    testit.py
    wrap_glib.pyx
    helloworld_c=helloworld_c {
     Makefile
     hello.pyx
     helloworld.c
     helloworld.h
    }
    helloworld_cpp=helloworld_cpp {
     Makefile
     hello.pyx
     helloworld.cpp
     helloworld.h
    }
    test1=test1 {
     Makefile
     test.pyx
    }
   }
   demo=demo {
   }
   kw1=kw1 {
    Makefile
    kiwi.c
    test-kiwi.py
   }
   simple_type1=simple_type1 {
    setup.cfg
    setup.py
    simple.c
    test-simple.py
   }
   spam=spam {
    Makefile
    spam.c
    test-spam.py
   }
   sum=sum {
    Makefile
    csum.c
    test-sum.py
   }
   swig=swig {
    cpptest=cpptest {
     Makefile
     test.cpp
     test.h
     test.i
     testmod.py
     try.py
    }
    speed=speed {
     Makefile
     test.c
     test.py
     test.sh
     testfunc.c
     testfunc.i
     wscript
    }
    swig_demo=swig_demo {
     Makefile
     mymod.c
     mymod.i
     testit.py
    }
   }
   tst=tst {
    setup.py
    tst.c
   }
   unicode=unicode {
    setup.py
    test.py
    tst.c
   }
  }
  gettext=gettext {
   pytest1=pytest1 {
    pytest1.py
    po=po {
     Makefile
     en.po
     nb.po
     pytest1.pot
    }
   }
  }
  gobject=gobject {
   car=car {
    acar.py
    car.py
   }
  }
  gtk=gtk {
   hello.py
   hello2.py
   packing.py
   progress.py
   togglebutton.py
   scplayer=scplayer {
    scplayer.py
    interfaces=interfaces {
     __init__.py
     player.py
     playlist.py
     store.py
    }
    plugins=plugins {
     __init__.py
     gstgtkplayer.py
     plsplaylist.py
     shoutcast.py
    }
   }
   xmlexplorer=xmlexplorer {
    XmlExplorer.glade
    XmlExplorer.py
    XmlParser.py
    simple.xml
   }
  }
  http=http {
   cookie.py
  }
  logging=logging {
   simple_config.conf
   simple_config.log
   simple_config.py
   simple_log.py
  }
  optparse=optparse {
   optionparser1.py
  }
  pygame=pygame {
   simple.py
  }
  pygments=pygments {
   custom_formatter.py
  }
  qt4=qt4 {
   dropdown.py
   dropdown.ui
   dropdown_ui.py
   helloworld.py
   helloworld.ui
   helloworld_ui.py
  }
  snipplets=snipplets {
   README.txt
   classes.py
   decorators.py
   descriptors.py
   mail.py
   metaclasses.py
   new_constructor.py
   numeric_py.py
   pulldom_test.py
   recursive_dir.py
  }
  socket=socket {
   client.py
   myclient.py
   myserver.py
   server.py
   thread_client.py
   thread_server.py
   basic=basic {
    echo-client.py
    echo-fork-server.py
    echo-select-server.py
    echo-socketserver-forking-server.py
    echo-socketserver-threading-server.py
    echo-threading-server.py
   }
   broadcast=broadcast {
    bcastreceiver.py
    bcastsender.py
   }
   gnutls=gnutls {
    echo=echo {
     CA.cert
     CA.pkey
     client.cert
     client.pkey
     client.py
     client.req.pem
     crl.pem
     server.cert
     server.pkey
     server.py
     server.req.pem
    }
   }
   openssl=openssl {
    ssl-connect.py
    echo=echo {
     CA.cert
     CA.pkey
     README.txt
     client.cert
     client.pkey
     client.py
     server.cert
     server.pkey
     server.py
    }
   }
  }
  sql=sql {
   sqldb_tests.py
  }
  sqlalchemy=sqlalchemy {
   firststeps.py
   joindemo.py
   mapper1.py
   search.py
   selectdemo.py
   simple.py
  }
  threads=threads {
   locking.py
   semaphore.py
   thread_test.py
  }
  unicode=unicode {
   uidentify.py
   unidata.txt
   utf8file.py
   utf8test.py
  }
  unittest=unittest {
   simple1.py
  }
  wsgi=wsgi {
   basicauth.py
   cgi.py
   digestauth.py
   enkel-tests.py
   hello1.py
   http_redirect.py
   routes1.py
   simple1.py
   simple2.py
  }
  xmlrpc=xmlrpc {
   simple_client.py
   simple_server.py
   time_client.py
   time_service.py
  }
 }
 ruby=ruby {
  classes.rb
  eigenclass.rb
  mixins.rb
  modules.rb
  really_simple_stuff.rb
  singleton_class.rb
  subclassing.rb
 }
 scheme=scheme {
  Scheme-primitiver.txt
  assert.scm
  bintree.scm
  common.scm
  cons.scm
  counter.scm
  delay.scm
  display.scm
  lambda.scm
  let.scm
  lists.scm
  pair.scm
  table.scm
 }
 sml=sml {
  abstype1.sml
  build_ast.sml
  except1.sml
  except2.sml
  listfun1.sml
  listfun2.sml
  records1.sml
  sigstruc1.sml
 }
 tex=tex {
  multifile=multifile {
  }
 }
 xforms=xforms {
  tests=tests {
   submit.py
   static=static {
    person.xml
    test1.xhtml
   }
  }
 }
 xslt=xslt {
  tests=tests {
   test1.xml
   test1.xsl
   test2.xml
   test2.xsl
   test3.xml
   test3.xsl
   test3_import.xsl
  }
 }
}

inf1010-svn=~/code/inf1010-kursmateriale/fellesovelser/v09/src/main/java filter="*.java *.txt *.rst" {
 Superheroes.java
 names.txt
 IO=IO {
  Input.java
  Input1.java
  Input2.java
  Input3.java
  Io.java
  NumberFileStoreDemo.java
  ScannerEx.java
  ScannerExamples.java
  SkrivTilFil.java
  file.txt
  file2.txt
  numbers.txt
 }
 abstractAndInterface=abstractAndInterface {
  Kaffemaskin.java
  Merkelapp.java
  MerkelappTest.java
  Person.java
  Q.java
  Uqbar.java
  superhero=superhero {
   AbstractHero.java
   CapedSpandexSuperHero.java
   Hero.java
   NoSuperHero.java
   SpandexSuperHero.java
   Superheroes.java
  }
 }
 accessmodifiers=accessmodifiers {
  evil=evil {
   Stewie.java
  }
  human=human {
   Human.java
   SantaClaus.java
   superhero=superhero {
    Superman.java
   }
  }
 }
 arv=arv {
  Arv.java
  C.java
  ImplisittSuper.java
  PersonPoly.java
  Polymorphism.java
  Skriv.java
  Test.java
  VariablesAndProtection.java
  fasit_uke4_inf1010.txt
 }
 bilder=bilder {
 }
 collections=collections {
  MyDeque.java
  Revers.java
  ReversTest.java
  Reverse.java
 }
 debugging=debugging {
  GrowableArrayTest.java
 }
 exceptions=exceptions {
  AddressbookExample.java
  ExceptionExample.java
 }
 generics=generics {
  BoundedType.java
  IterableStack.java
  IterableStackWorking.java
  PersonTlf.java
  Stack.java
  StackTest.java
  Student.java
  StudentInfo.java
 }
 gui=gui {
  AboutMe.java
  AboutMe2.java
  AboutMe3.java
  AboutMe4.java
  Bank.java
  BankGui.java
  CircleGui.java
  DialogEksempel.java
  DrawMaster3000.java
  HelloWorld.java
  LayoutTest.java
  LayoutTest2.java
  Paint1010.java
  PersonGui.java
  SpringerGui.java
  Sudoku.java
  SuperHeroListGui.java
 }
 indreKlasser=indreKlasser {
  InnerClassExp.java
  TestClass.java
 }
 intro=intro {
  Example.java
  intro.txt
 }
 lister=lister {
  ArrayList.java
  ArrayListTest.java
  ArrayStack.java
  DequeWithLinkedList.java
  DoubleLinkedListWithHeadAndTail.java
  InternalExternalStorage.java
  LIFO.java
  LinkedList.java
  LinkedListWithHeadAndTail.java
  LinkedListWithHeadAndTailOppg1.java
  Person.java
  PersonListe.java
  Stack.java
 }
 recursion=recursion {
  Fakultet.java
  FastSudoku.java
  ForEver.java
  PermutateString.java
  RecursionVSIterationOnLinkedList.java
  Sierpinski.java
  SmartTrucks.java
  Springer.java
  StringPermutation.java
  StupidTrucks.java
 }
 repetisjon=repetisjon {
  A.java
  LinkedStack.java
  Person.java
  Sortering.java
 }
 sorting=sorting {
  AlternativeInsertionSort.java
  BubbleGui.java
  Bubblesort.java
  InsertionSort.java
  MergeSort.java
  QSort.java
  QuickSort.java
  TreeSort.java
  insertionsort.txt
  iface=iface {
   AbstractSortingAlgorithm.java
   BubbleSort.java
   Cli.java
   InsertionSort.java
   NotSortedException.java
   QuickSortCopy.java
   QuickSortInPlace.java
   SortingInterface.java
   TreeSort.java
  }
 }
 threads=threads {
  GuiFreeze.java
  PeopleList.java
  PeopleListLock.java
  PeopleListSync.java
  ProducerConsumer.java
  Restaurant.java
  RestaurantJP.java
  RestaurantUp.java
  SemaphoreOppg.java
  SimpleThread.java
  Stafett.java
  StartThread.java
  efficiency=efficiency {
   Test.java
  }
  threadpool=threadpool {
   ThreadPool.java
   ThreadPoolDemo.java
   ThreadPoolDemo2.java
  }
 }
 tree=tree {
  BinarySearchTree.java
  BinarySearchTreeTest.java
  GenericTree.java
  LIFO.java
  Median.java
  Person.java
  Tre.java
 }
}
inf1010-git=/Users/espeak/code/java-oo-examples filter="*.java *.txt" {
 IO=IO {
  Input.java
 }
 generics=generics {
  GenericPersonExample.java
  Stack.java
  StackExample.java
 }
 inheritance=inheritance {
  ImplisittSuper.java
  IndexOutOfBound.java
  KeyboardInputExample.java
  SubclassWithException.java
  flightsimulator=flightsimulator {
   FlightSim.java
  }
  toij=toij {
  }
 }
 lists=lists {
  ArrayListTest.java
  IterableStackExample.java
  LinkedListWithHeadAndTailExample.java
  LinkedListWithoutHeadOrTail.java
  Person.java
  Sieve.java
  SimpleArrayListTest.java
 }
 program-structure=program-structure {
  AsciiDrawExample.java
  web-browser=web-browser {
   WebBrowserExample.java
  }
 }
 slides=slides {
  oppgave1.java
  oppgave1b.java
 }
 tree=tree {
  GenericTreeExample.java
 }
}
